{"version":3,"sources":["Solver.js","PerCategoryCardChooser.js","TopBar.js","PlayerChooser.js","CurrentState.js","AccuseDialog.js","ConfirmDialog.js","MultipleCardChooser.js","LogDialog.js","HandDialog.js","SetupDialog.js","MainMenu.js","CardChooser.js","App.js","ShowDialog.js","MultiplePlayerChooser.js","SuggestDialog.js","registerServiceWorker.js","index.js"],"names":["Card","Player","indexOf","holders1","info1","Object","classCallCheck","this","holders","info","createClass","key","value","playerId","filter","h","call","length","cardIds","potential","cardId","c","Solver","CardChoices","CardList","configuration","playerIds","id","j","len","p","playerIdsIncludingAnswer","ref","ANSWER_PLAYER_ID","rulesId","types","cards","players","discoveriesLog","suggestions","accusations","facts","results","push","concat","ANSWER","outcome","accusation","changed","deduceFromAccusation","makeOtherDeductions","cardsIds","deduceFromHand","deduceFromShow","showedIds","suggestion","deduceFromSuggestion","count","held","player","mightHold","notHeld","isHeldBy","playerIsValid","cardIsValid","typeId","mustNotHoldId","addDiscoveries","disassociatePlayerWithCards","associatePlayerWithCard","playerMustNotHoldOne","addDiscovery","disassociatePlayerWithCard","deduceFromSuggestionWithMasterRules","deduceFromSuggestionWithClassicRules","hand","i","mustHoldId","suggesterId","playerMustHoldOne","a","k","len1","ref1","s","addCardHoldersToDiscoveries","checkThatAnswerHoldsExactlyOneOfEach","card","heldByAnswer","heldId","heldType","l","len2","onlyPossible","type","slice","only","disassociateOtherPlayersWithCard","remove","otherId","holds","reason","cardInfo","discovery","f","fact","article","name","arguments","undefined","TopBar","props","react_default","createElement","AppBar_default","position","Toolbar_default","IconButton_default","color","onClick","event","app","showMainMenu","currentTarget","Menu_default","Typography_default","variant","boundMethodCheck","instance","Constructor","Error","selectedIds","title","RadioGroup_default","row","onChange","FormControlLabel_default","control","Radio_default","label","PerCategoryCardChooser","PlayerChoices","_Component","_this","possibleConstructorReturn","getPrototypeOf","handleChangeTab","bind","assertThisInitialized","changeEventHandler","state","currentTab","inherits","setState","_this2","target","tabId","tabIds","tabIndex","_this$props","Tabs_default","Tab_default","PerCategoryCardChooser_CardChoices","PerCategoryCardChooser_CardList","Component","PlayerChooser","HeaderRow","Maybe","No","StateElement","StateRow","Yes","FormControl_default","component","PlayerChooser_PlayerChoices","AccuseDialog","handleChangeAccuserId","handleChangeCards","handleChangeOutcome","handleDone","handleCancel","accuserId","newCardIds","assign","recordAccusation","onClose","showConfirmDialog","Dialog_default","open","DialogTitle_default","DialogContent_default","DialogContentText_default","src_PlayerChooser","Divider_default","src_PerCategoryCardChooser","DialogActions_default","Button_default","ConfirmDialog","apply","handleYes","handleNo","yesAction","noAction","question","Icon_default","CurrentState_Yes","mightBeHeldBy","CurrentState_Maybe","Grid_default","container","item","xs","justify","CurrentState_StateElement","CurrentState","GroupedCardList","_props$solver","solver","CurrentState_HeaderRow","CurrentState_StateRow","MultipleCardChooser_GroupedCardList","checked","FormGroup_default","Checkbox_default","disabled","excluded","MultipleCardChooser","cardList","cardPhrase","playerList","suggestedCardsClause","transcribedList","_Component2","_this3","MultipleCardChooser_CardChoices","MultipleCardChooser_CardList","HandDialog","handleChangePlayer","selected","recordHand","fullscreen","src_MultipleCardChooser","phrase","usePreposition","preposition","list","string","names","card1","card2","card3","clause","suggestionOrder","LogDialog","AddPlayerInput","ConfigurationChoices","ConfigurationChooser","PlayerList","Players","describeSetup","describeHand","describeSuggest","describeShow","describeAccuse","describeEntry","suggester","showed","accuser","entry","setup","suggest","show","accuse","alert","log","configurations","variation","List_default","dense","ListItem_default","ListItemText_default","primary","MainMenu","handleStart","handleClear","handleLog","showNewGameDialog","clearGame","showLog","core_Menu_default","anchorEl","anchor","Boolean","MenuItem_default","enableShowLog","configurationId","FormLabel_default","SetupDialog_ConfigurationChoices","handleChange","handleKeyDown","handleAddPlayer","keyCode","onAddPlayer","TextField_default","autoFocus","margin","onKeyDown","max","propTypes","PropTypes","arrayOf","isRequired","number","func","map","defaultProps","SetupDialog_AddPlayerInput","SetupDialog_PlayerList","onClearPlayers","SetupDialog","handleClearPlayers","handleChangeConfiguration","newGame","maxPlayers","minPlayers","numPlayers","SetupDialog_ConfigurationChooser","SetupDialog_Players","CardChooser","CardChooser_CardChoices","ShowDialog","handleChangeCard","recordShown","src_CardChooser","MultiplePlayerChooser","SuggestDialog","handleChangeSuggesterId","handleChangeShowedIds","recordSuggestion","src_MultiplePlayerChooser","classic","suspect","weapon","room","mustard","white","plum","peacock","green","scarlet","revolver","knife","rope","pipe","wrench","candlestick","dining","conservatory","kitchen","study","library","billiard","lounge","ballroom","hall","master_detective","rose","gray","brunette","peach","poison","horseshoe","studio","courtyard","gazebo","drawing","carriage","trophy","fountain","haunted_mansion","guest","ghost","pluto","daisy","goofy","donald","minnie","mickey","prisoner","singer","bride","traveler","mariner","skeleton","graveyard","seance","attic","mausoleum","foyer","chamber","App","showHandDialog","showSuggestDialog","showShowDialog","showAccuseDialog","handleConfirmDialogClose","mainMenuAnchor","handDialogOpen","suggestDialogOpen","showDialogOpen","accuseDialogOpen","newGameDialogOpen","confirmDialog","logDialogOpen","setupLogEntry","progress","logHandEntry","logSuggestEntry","logShowEntry","logAccuseEntry","className","src_TopBar","src_CurrentState","src_MainMenu","src_SetupDialog","src_HandDialog","src_SuggestDialog","src_ShowDialog","src_AccuseDialog","src_LogDialog","src_ConfirmDialog","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6a5957bd.chunk.js","sourcesContent":["// Generated by CoffeeScript 2.3.2\nvar Card, Player, Solver,\n  indexOf = [].indexOf;\n\nCard = class Card {\n  constructor(holders1, info1) {\n    this.holders = holders1;\n    this.info = info1;\n  }\n\n  remove(playerId) {\n    return this.holders = this.holders.filter(function(h) {\n      return h !== playerId;\n    });\n  }\n\n  mightBeHeldBy(playerId) {\n    return indexOf.call(this.holders, playerId) >= 0;\n  }\n\n  isHeldBy(playerId) {\n    return this.holders.length === 1 && this.holders[0] === playerId;\n  }\n\n};\n\nPlayer = class Player {\n  constructor(cardIds) {\n    this.potential = cardIds;\n  }\n\n  remove(cardId) {\n    return this.potential = this.potential.filter(function(c) {\n      return c !== cardId;\n    });\n  }\n\n  doesNotHold(cardId) {\n    return indexOf.call(this.potential, cardId) < 0;\n  }\n\n  mightHold(cardId) {\n    return indexOf.call(this.potential, cardId) >= 0;\n  }\n\n};\n\nSolver = class Solver {\n  constructor(configuration, playerIds) {\n    var cardIds, id, info, j, len, p, playerIdsIncludingAnswer, ref;\n    this.ANSWER_PLAYER_ID = \"ANSWER\"; // The answer is treated as a player\n    this.rulesId = configuration.rulesId;\n    this.types = configuration.types;\n    this.cards = {};\n    this.players = {};\n    this.discoveriesLog = [];\n    this.suggestions = [];\n    this.accusations = [];\n    this.facts = [];\n    cardIds = (function() {\n      var ref, results;\n      ref = configuration.cards;\n      results = [];\n      for (id in ref) {\n        info = ref[id];\n        results.push(id);\n      }\n      return results;\n    })();\n    playerIdsIncludingAnswer = playerIds.concat(this.ANSWER_PLAYER_ID);\n    ref = configuration.cards;\n    for (id in ref) {\n      info = ref[id];\n      this.cards[id] = new Card(playerIdsIncludingAnswer, info);\n    }\n    for (j = 0, len = playerIdsIncludingAnswer.length; j < len; j++) {\n      p = playerIdsIncludingAnswer[j];\n      this.players[p] = new Player(cardIds);\n    }\n    this.ANSWER = this.players[this.ANSWER_PLAYER_ID];\n  }\n\n  accuse(playerId, cardIds, outcome) {\n    var accusation, changed;\n    this.discoveriesLog = [];\n    accusation = {playerId, cardIds, outcome};\n    this.accusations.push(accusation);\n    changed = false;\n    changed = this.deduceFromAccusation(accusation, changed);\n    changed = this.makeOtherDeductions(changed);\n    return changed;\n  }\n\n  hand(playerId, cardsIds) {\n    var changed;\n    this.discoveriesLog = [];\n    changed = false;\n    changed = this.deduceFromHand(playerId, cardsIds, changed);\n    changed = this.makeOtherDeductions(changed);\n    return changed;\n  }\n\n  show(playerId, cardId) {\n    var changed;\n    this.discoveriesLog = [];\n    changed = false;\n    changed = this.deduceFromShow(playerId, cardId, changed);\n    changed = this.makeOtherDeductions(changed);\n    return changed;\n  }\n\n  suggest(playerId, cardIds, showedIds, id) {\n    var changed, suggestion;\n    this.discoveriesLog = [];\n    suggestion = {id, playerId, cardIds, showedIds};\n    this.suggestions.push(suggestion);\n    changed = false;\n    changed = this.deduceFromSuggestion(suggestion, changed);\n    changed = this.makeOtherDeductions(changed);\n    return changed;\n  }\n\n  // If the player must hold one of the cards, but we know it doesn't hold all but one, then that one must be the one that is held\n  playerMustHoldOne(playerId, cardIds) {\n    var count, held, id, j, len, player;\n    player = this.players[playerId];\n    count = 0;\n    held = null;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      if (player.mightHold(id)) {\n        ++count;\n        if (count > 1) { // Early out -- might hold more than one, so not all-but-one\n          return null;\n        }\n        held = id;\n      }\n    }\n    return held;\n  }\n\n  // If the player must not hold one of the cards, but we know it holds all but one, then that one is the one it doesn't hold\n  playerMustNotHoldOne(playerId, cardIds) {\n    var count, id, j, len, notHeld;\n    count = 0;\n    notHeld = null;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      if (!this.cards[id].isHeldBy(playerId)) {\n        ++count;\n        if (count > 1) { // Early out -- more than one card is not held, so not all-but-one\n          return null;\n        }\n        notHeld = id;\n      }\n    }\n    return notHeld;\n  }\n\n  cardsThatMightBeHeldBy(playerId) {\n    return this.players[playerId].potential;\n  }\n\n  whoMightHold(cardId) {\n    return this.cards[cardId].holders;\n  }\n\n  playersAreValid(playerIds) {\n    var id, j, len;\n    for (j = 0, len = playerIds.length; j < len; j++) {\n      id = playerIds[j];\n      if (!this.playerIsValid(id)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  playerIsValid(playerId) {\n    return playerId !== this.ANSWER_PLAYER_ID && playerId in this.players;\n  }\n\n  cardsAreValid(cardIds) {\n    var id, j, len;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      if (!this.cardIsValid(id)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  cardIsValid(cardId) {\n    return cardId in this.cards;\n  }\n\n  typeIsValid(typeId) {\n    return indexOf.call(this.types, typeId) >= 0;\n  }\n\n  deduceFromAccusation(accusation, changed) {\n    var cardId, cardIds, j, len, mustNotHoldId, outcome, playerId;\n    ({playerId, cardIds, outcome} = accusation);\n    // You can deduce from an accusation that:\n    //    The accuser does not have the cards in the accusation.\n    //    If the accusation is correct, then those are the cards.\n    //    If the accusation is incorrect, then\n    //      If two of the cards are held by the answer, then it must not hold the third\n    this.addDiscoveries(playerId, cardIds, false, \"made an accusation with these cards\");\n    changed = this.disassociatePlayerWithCards(playerId, cardIds, changed);\n    if (outcome) {\n      for (j = 0, len = cardIds.length; j < len; j++) {\n        cardId = cardIds[j];\n        changed = this.associatePlayerWithCard(this.ANSWER_PLAYER_ID, cardId, changed);\n      }\n    } else {\n      mustNotHoldId = this.playerMustNotHoldOne(this.ANSWER_PLAYER_ID, cardIds);\n      if (mustNotHoldId !== null) {\n        this.addDiscovery(this.ANSWER_PLAYER_ID, mustNotHoldId, false, \"the accusation was wrong but the answer holds the others\");\n        changed = this.disassociatePlayerWithCard(this.ANSWER_PLAYER_ID, mustNotHoldId, changed);\n      }\n    }\n    return changed;\n  }\n\n  deduceFromSuggestion(suggestion, changed) {\n    if (this.rulesId === \"master\") {\n      return this.deduceFromSuggestionWithMasterRules(suggestion, changed);\n    } else {\n      return this.deduceFromSuggestionWithClassicRules(suggestion, changed);\n    }\n  }\n\n  // Make deductions based on the player having exactly these cards\n  deduceFromHand(playerId, hand, changed) {\n    var cardId;\n// Associate the player with every card in the hand and disassociate the player with every other card.\n    for (cardId in this.cards) {\n      if (indexOf.call(hand, cardId) >= 0) {\n        this.addDiscovery(playerId, cardId, true, \"hand\");\n        changed = this.associatePlayerWithCard(playerId, cardId, changed);\n      } else {\n        this.addDiscovery(playerId, cardId, false, \"hand\");\n        changed = this.disassociatePlayerWithCard(playerId, cardId, changed);\n      }\n    }\n    return changed;\n  }\n\n  \n  // Make deductions based on the player having this cardId\n  deduceFromShow(playerId, cardId, changed) {\n    this.addDiscovery(playerId, cardId, true, \"revealed\");\n    changed = this.associatePlayerWithCard(playerId, cardId, changed);\n    return changed;\n  }\n\n  deduceFromSuggestionWithClassicRules(suggestion, changed) {\n    var cardIds, i, id, j, mustHoldId, playerId, ref, showedIds, suggesterId;\n    id = suggestion.id;\n    suggesterId = suggestion.playerId;\n    cardIds = suggestion.cardIds;\n    showedIds = suggestion.showedIds;\n    // You can deduce from a suggestion that:\n    //    If nobody showed a card, then none of the players (except possibly the suggester or the answer) have the cards.\n    //    Only the last player in the showed list might hold any of the suggested cards.\n    //    If the player that showed a card does not hold two of the cards, then the player must hold the third.\n    if (showedIds === null || showedIds.length === 0) {\n      for (playerId in this.players) {\n        if (playerId !== this.ANSWER_PLAYER_ID && playerId !== suggesterId) {\n          this.addDiscoveries(playerId, cardIds, false, \"did not show a card in suggestion #\" + id);\n          changed = this.disassociatePlayerWithCards(playerId, cardIds, changed);\n        }\n      }\n    } else {\n// All but the last player have none of the cards\n      for (i = j = 0, ref = showedIds.length - 1; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {\n        playerId = showedIds[i];\n        this.addDiscoveries(playerId, cardIds, false, \"did not show a card in suggestion #\" + id);\n        changed = this.disassociatePlayerWithCards(playerId, cardIds, changed);\n      }\n      // The last player showed a card.\n      // If the player does not hold all but one of cards, the player must hold the one.\n      playerId = showedIds[showedIds.length - 1];\n      mustHoldId = this.playerMustHoldOne(playerId, cardIds);\n      if (mustHoldId !== null) {\n        this.addDiscovery(playerId, mustHoldId, true, \"showed a card in suggestion #\" + id + \", and does not hold the others\");\n        changed = this.associatePlayerWithCard(playerId, mustHoldId, changed);\n      }\n    }\n    return changed;\n  }\n\n  deduceFromSuggestionWithMasterRules(suggestion, changed) {\n    var cardIds, id, mustHoldId, playerId, showedIds, suggesterId;\n    id = suggestion.id;\n    suggesterId = suggestion.playerId;\n    cardIds = suggestion.cardIds;\n    showedIds = suggestion.showedIds;\n// You can deduce from a suggestion that:\n//    If a player shows a card but does not have all but one of the suggested cards, the player must hold the one.\n//    If a player (other than the answer and suggester) does not show a card, the player has none of the suggested cards.\n//    If all suggested cards are shown, then the answer and the suggester hold none of the suggested cards.\n    for (playerId in this.players) {\n      // If the player showed a card ...\n      if (indexOf.call(showedIds, playerId) >= 0) {\n        // ..., then if the player does not hold all but one of the cards, the player must hold the one.\n        mustHoldId = this.playerMustHoldOne(playerId, cardIds);\n        if (mustHoldId !== null) {\n          this.addDiscovery(playerId, mustHoldId, true, \"showed a card in suggestion #\" + id + \", and does not hold the others\");\n          changed = this.associatePlayerWithCard(playerId, mustHoldId, changed);\n        }\n      // Otherwise, if the player is other than the answer and suggester ...\n      } else if (playerId !== this.ANSWER_PLAYER_ID && playerId !== suggesterId) {\n        // ... then they don't hold any of them.\n        this.addDiscoveries(playerId, cardIds, false, \"did not show a card in suggestion #\" + id);\n        this.disassociatePlayerWithCards(playerId, suggestion.cardIds, changed);\n      } else {\n        // Otherwise, for the answer and suggester, if 3 cards were shown ...\n        if (showedIds.length === 3) {\n          // ... then they don't hold them.\n          this.addDiscoveries(playerId, cardIds, false, \"all three cards were shown by other players in suggestion #\" + id);\n          changed = this.disassociatePlayerWithCards(playerId, cardIds, changed);\n        }\n      }\n    }\n    return changed;\n  }\n\n  makeOtherDeductions(changed) {\n    var a, j, k, len, len1, ref, ref1, s;\n    this.addCardHoldersToDiscoveries();\n    changed = this.checkThatAnswerHoldsExactlyOneOfEach(changed);\n    // While something has changed, then keep re-applying all the suggestions and accusations\n    while (changed) {\n      changed = false;\n      ref = this.suggestions;\n      for (j = 0, len = ref.length; j < len; j++) {\n        s = ref[j];\n        changed = this.deduceFromSuggestion(s, changed);\n      }\n      ref1 = this.accusations;\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        a = ref1[k];\n        changed = this.deduceFromAccusation(a, changed);\n      }\n      this.addCardHoldersToDiscoveries();\n      changed = this.checkThatAnswerHoldsExactlyOneOfEach(changed);\n    }\n    this.addCardHoldersToDiscoveries();\n    return changed;\n  }\n\n  checkThatAnswerHoldsExactlyOneOfEach(changed) {\n    var answer, card, cardId, heldByAnswer, heldId, heldType, info, j, k, l, len, len1, len2, onlyPossible, potential, ref, ref1, typeId;\n    answer = this.players[this.ANSWER_PLAYER_ID];\n    // Find the cards that are known to be held by the answer\n    heldByAnswer = {};\n    ref = answer.potential;\n    for (j = 0, len = ref.length; j < len; j++) {\n      cardId = ref[j];\n      card = this.cards[cardId];\n      if (card.isHeldBy(this.ANSWER_PLAYER_ID)) {\n        heldByAnswer[card.info.type] = cardId;\n      }\n    }\n    // If so, then the answer can not hold any other cards of the same types\n    potential = this.ANSWER.potential.slice(0);\n    for (k = 0, len1 = potential.length; k < len1; k++) {\n      cardId = potential[k];\n      card = this.cards[cardId];\n      for (heldType in heldByAnswer) {\n        heldId = heldByAnswer[heldType];\n        if (card.info.type === heldType && cardId !== heldId) {\n          this.addDiscovery(this.ANSWER_PLAYER_ID, cardId, false, \"ANSWER can only hold one \" + heldType);\n          changed = this.disassociatePlayerWithCard(this.ANSWER_PLAYER_ID, cardId, changed);\n        }\n      }\n    }\n    // For each type, if there is only one card that might be held by the answer, then it must be held by the answer\n    onlyPossible = {};\n    ref1 = this.ANSWER.potential;\n    for (l = 0, len2 = ref1.length; l < len2; l++) {\n      cardId = ref1[l];\n      card = this.cards[cardId];\n      if (!card.isHeldBy(this.ANSWER_PLAYER_ID)) {\n        typeId = card.info.type;\n        if (onlyPossible[typeId] != null) {\n          onlyPossible[typeId].only = false;\n        } else {\n          onlyPossible[typeId] = {\n            cardId: cardId,\n            only: true\n          };\n        }\n      }\n    }\n    for (typeId in onlyPossible) {\n      info = onlyPossible[typeId];\n      if (info.only) {\n        this.addDiscovery(this.ANSWER_PLAYER_ID, info.cardId, true, \"Only \" + typeId + \" that ANSWER can hold\");\n        changed = this.associatePlayerWithCard(this.ANSWER_PLAYER_ID, info.cardId, changed);\n      }\n    }\n    return changed;\n  }\n\n  associatePlayerWithCard(playerId, cardId, changed) {\n    if (this.cards[cardId].holders.length === 1) { // Already associated\n      return changed;\n    }\n    return this.disassociateOtherPlayersWithCard(playerId, cardId, changed); // Simply remove all others as potential holders\n  }\n\n  disassociatePlayerWithCard(playerId, cardId, changed) {\n    var player;\n    player = this.players[playerId];\n    if (player.mightHold(cardId)) {\n      player.remove(cardId);\n      this.cards[cardId].remove(playerId);\n      changed = true;\n      this.addDiscovery(playerId, cardId, false); // Add this discovery, but don't log it \n    }\n    return changed;\n  }\n\n  disassociatePlayerWithCards(playerId, cardIds, changed) {\n    var id, j, len;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      changed = this.disassociatePlayerWithCard(playerId, id, changed);\n    }\n    return changed;\n  }\n\n  disassociateOtherPlayersWithCard(playerId, cardId, changed) {\n    var otherId;\n    for (otherId in this.players) {\n      if (otherId !== playerId) {\n        changed = this.disassociatePlayerWithCard(otherId, cardId, changed);\n      }\n    }\n    return changed;\n  }\n\n  cardIsType(cardId, type) {\n    return this.cards[cardId].info.type === type;\n  }\n\n  addDiscovery(playerId, cardId, holds, reason) {\n    var cardInfo, discovery, f, fact, j, len, ref, typeinfo;\n    ref = this.facts;\n    // Check if the fact is not already known\n    for (j = 0, len = ref.length; j < len; j++) {\n      f = ref[j];\n      if (f.playerId === playerId && f.cardId === cardId) {\n        return;\n      }\n    }\n    fact = {playerId, cardId, holds};\n    this.facts.push(fact);\n    if (reason != null) {\n      cardInfo = this.cards[cardId].info;\n      typeinfo = this.types[cardInfo.type];\n      discovery = playerId + (holds ? \" holds \" : \" does not hold \") + typeinfo.article + cardInfo.name + \": \" + reason;\n      return this.discoveriesLog.push(discovery);\n    }\n  }\n\n  addDiscoveries(playerId, cardIds, holds, reason = null) {\n    var c, j, len;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      c = cardIds[j];\n      this.addDiscovery(playerId, c, holds, reason);\n    }\n  }\n\n  addCardHoldersToDiscoveries() {\n    var card, cardId, holders, ref, results;\n    ref = this.cards;\n    results = [];\n    for (cardId in ref) {\n      card = ref[cardId];\n      holders = card.holders;\n      if (holders.length === 1) {\n        results.push(this.addDiscovery(holders[0], cardId, true, \"nobody else holds it\"));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  }\n\n};\n\nexport default Solver;\n","// Generated by CoffeeScript 2.3.2\n\nimport AppBar from '@material-ui/core/AppBar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nimport React, { Component } from 'react';\n;\nvar CardChoices, CardList, PerCategoryCardChooser,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nCardList = function(props) {\n  var cards, selectedIds, typeId, types, value;\n  ({selectedIds, cards, types} = props);\n  return <ul>\n    {(function() {\n    var results;\n    results = [];\n    for (typeId in types) {\n      value = types[typeId];\n      results.push(<li key={typeId}>\n          <b> {value.title}: </b> {(selectedIds[typeId] != null ? cards[selectedIds[typeId]].name : void 0)}\n        </li>);\n    }\n    return results;\n  })()}\n  </ul>;\n};\n\nCardChoices = function(props) {\n  var id, info;\n  return <RadioGroup row name=\"cards\" value={props.value} onChange={props.onChange}>\n    {(function() {\n    var ref, results;\n    ref = props.cards;\n    results = [];\n    for (id in ref) {\n      info = ref[id];\n      if (info.type === props.typeId) {\n        results.push(<FormControlLabel key={id} value={id} control={<Radio />} label={info.name} />);\n      }\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nPerCategoryCardChooser = class PerCategoryCardChooser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.changeEventHandler = this.changeEventHandler.bind(this);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChangeTab(event, currentTab) {\n    boundMethodCheck(this, PerCategoryCardChooser);\n    return this.setState({currentTab});\n  }\n\n  changeEventHandler(typeId) {\n    boundMethodCheck(this, PerCategoryCardChooser);\n    return (event) => {\n      return this.props.onChange(typeId, event.target.value);\n    };\n  }\n\n  render() {\n    var cards, id, tabId, tabIds, tabIndex, types, value;\n    ({value, cards, types} = this.props);\n    tabIds = (function() {\n      var results;\n      results = [];\n      for (id in types) {\n        results.push(id);\n      }\n      return results;\n    })();\n    tabIndex = this.state.currentTab >= 0 && this.state.currentTab < tabIds.length ? this.state.currentTab : 0;\n    tabId = tabIds[tabIndex];\n    return <div>\n      <AppBar position=\"static\">\n        <Tabs value={tabIndex} onChange={this.handleChangeTab}>\n          {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = tabIds.length; i < len; i++) {\n        id = tabIds[i];\n        results.push(<Tab key={id} label={types[id].title} />);\n      }\n      return results;\n    })()}\n        </Tabs>\n      </AppBar>\n      <CardChoices value={value[tabId]} cards={cards} typeId={tabId} onChange={this.changeEventHandler(tabId)} />\n      <h4>Selected Cards:</h4>\n      <CardList selectedIds={value} cards={cards} types={types} />\n    </div>;\n  }\n\n};\n\nexport default PerCategoryCardChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n;\nvar TopBar;\n\n//import { withStyles } from '@material-ui/core/styles';\nTopBar = function(props) {\n  return <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton color=\"inherit\" onClick={(event) => {\n      return props.app.showMainMenu(event.currentTarget);\n    }}>\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\">\n        Not A Clue\n      </Typography>\n    </Toolbar>\n  </AppBar>;\n};\n\nexport default TopBar;\n","// Generated by CoffeeScript 2.3.2\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport React from 'react';\n;\nvar PlayerChoices, PlayerChooser;\n\nPlayerChoices = function(props) {\n  var id;\n  return <RadioGroup row name=\"players\" value={props.value} onChange={props.onChange}>\n    {(function() {\n    var i, len, ref, results;\n    ref = props.playerIds;\n    results = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      id = ref[i];\n      results.push(<FormControlLabel key={id} value={id} control={<Radio />} label={id} />);\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nPlayerChooser = function(props) {\n  return <FormControl component=\"fieldset\">\n    <PlayerChoices value={props.value} playerIds={props.playerIds} onChange={function(event) {\n      return props.onChange(event.target.value);\n    }} />\n  </FormControl>;\n};\n\nexport default PlayerChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport React from 'react';\n;\nvar CurrentState, HeaderRow, Maybe, No, StateElement, StateRow, Yes;\n\nYes = function(props) {\n  return <Icon>\n    {(props.playerId === \"ANSWER\" ? \"star\" : \"check_box\")}\n  </Icon>;\n};\n\nNo = function(props) {\n  return \"\";\n};\n\nMaybe = function(props) {\n  return <Icon color=\"disabled\">indeterminate_check_box</Icon>;\n};\n\nStateElement = function(props) {\n  var card, playerId;\n  ({card, playerId} = props);\n  if (card.isHeldBy(playerId)) {\n    return <Yes playerId={playerId} />;\n  } else if (card.mightBeHeldBy(playerId)) {\n    return <Maybe playerId={playerId} />;\n  } else {\n    return <No playerId={playerId} />;\n  }\n};\n\nHeaderRow = function(props) {\n  var playerId, players;\n  ({players} = props);\n  return <Grid container item xs={12} justify=\"center\">\n    <Grid item xs={4}><h4>Card</h4></Grid>\n    {(function() {\n    var results;\n    results = [];\n    for (playerId in players) {\n      results.push(<Grid item key={playerId} xs={1}><h4>{playerId}</h4></Grid>);\n    }\n    return results;\n  })()}\n  </Grid>;\n};\n\nStateRow = function(props) {\n  var card, playerId, players;\n  ({card, players} = props);\n  return <Grid container item xs={12} justify=\"center\">\n    <Grid item xs={4}>\n      {card.info.name}\n    </Grid>\n    {(function() {\n    var results;\n    results = [];\n    for (playerId in players) {\n      results.push(<Grid item key={playerId} xs={1}> \n          <StateElement card={card} playerId={playerId} /> \n        </Grid>);\n    }\n    return results;\n  })()}\n  </Grid>;\n};\n\nCurrentState = function(props) {\n  var card, cards, id, players;\n  ({cards, players} = props.solver);\n  return <Grid container>\n    <HeaderRow players={players} />\n    {(function() {\n    var results;\n    results = [];\n    for (id in cards) {\n      card = cards[id];\n      results.push(<StateRow key={id} card={card} players={players} />);\n    }\n    return results;\n  })()}\n  </Grid>;\n};\n\nexport default CurrentState;\n","// Generated by CoffeeScript 2.3.2\n\nimport PerCategoryCardChooser from './PerCategoryCardChooser'\nimport PlayerChooser from './PlayerChooser'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport React, { Component } from 'react';\n;\nvar AccuseDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nAccuseDialog = class AccuseDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeAccuserId = this.handleChangeAccuserId.bind(this);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n    this.handleChangeOutcome = this.handleChangeOutcome.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      accuserId: null,\n      cardIds: {},\n      outcome: null\n    };\n  }\n\n  handleChangeAccuserId(playerId) {\n    boundMethodCheck(this, AccuseDialog);\n    return this.setState({\n      accuserId: playerId\n    });\n  }\n\n  handleChangeCards(typeId, cardId) {\n    boundMethodCheck(this, AccuseDialog);\n    return this.setState(function(state, props) {\n      var newCardIds;\n      newCardIds = Object.assign({}, state.cardIds);\n      newCardIds[typeId] = cardId;\n      return {\n        cardIds: newCardIds\n      };\n    });\n  }\n\n  handleChangeOutcome(event) {\n    boundMethodCheck(this, AccuseDialog);\n    return this.setState({\n      outcome: event.target.value\n    });\n  }\n\n  handleDone() {\n    var cardId, cardIds, typeId;\n    boundMethodCheck(this, AccuseDialog);\n    cardIds = (function() {\n      var ref, results;\n      ref = this.state.cardIds;\n      results = [];\n      for (typeId in ref) {\n        cardId = ref[typeId];\n        results.push(cardId);\n      }\n      return results;\n    }).call(this);\n    if ((this.state.accuserId != null) && cardIds.length === 3 && (this.state.outcome != null)) {\n      this.props.app.recordAccusation(this.state.accuserId, cardIds, this.state.outcome === \"yes\");\n      this.setState({\n        accuserId: null,\n        cardIds: {},\n        outcome: null\n      });\n      return this.props.onClose();\n    } else {\n      return this.props.app.showConfirmDialog(\"Error\", \"You must select an accuser, 3 cards, and the outcome.\");\n    }\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, AccuseDialog);\n    this.setState({\n      accuserId: null,\n      cardIds: {},\n      outcome: null\n    });\n    return this.props.onClose();\n  }\n\n  render() {\n    return <Dialog open={this.props.open} onClose={this.handleCancel}>\n      <DialogTitle id=\"form-dialog-title\">Record An Accusation</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <h4>Who made the accusation?</h4>\n        </DialogContentText>\n        <PlayerChooser value={this.state.accuserId} playerIds={this.props.playerIds} onChange={this.handleChangeAccuserId} />\n        <Divider />\n        <DialogContentText>\n          <h4>What was the accusation?</h4>\n        </DialogContentText>\n        <PerCategoryCardChooser value={this.state.cardIds} cards={this.props.configuration.cards} types={this.props.configuration.types} onChange={this.handleChangeCards} />\n        <Divider />\n        <DialogContentText>\n          <h4>Was the accusation correct?</h4>\n        </DialogContentText>\n        <FormControl component=\"fieldset\">\n          <RadioGroup row name=\"outcome\" value={this.state.outcome} onChange={this.handleChangeOutcome}>\n            <FormControlLabel value={\"yes\"} control={<Radio />} label=\"Yes\" /> \n            <FormControlLabel value={\"no\"} control={<Radio />} label=\"No\" /> \n          </RadioGroup>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleDone}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default AccuseDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n;\nvar ConfirmDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nConfirmDialog = class ConfirmDialog extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleYes = this.handleYes.bind(this);\n    this.handleNo = this.handleNo.bind(this);\n  }\n\n  handleYes() {\n    boundMethodCheck(this, ConfirmDialog);\n    this.props.onClose();\n    if (this.props.yesAction != null) {\n      return this.props.yesAction();\n    }\n  }\n\n  handleNo() {\n    boundMethodCheck(this, ConfirmDialog);\n    this.props.onClose();\n    if (this.props.noAction != null) {\n      return this.props.noAction();\n    }\n  }\n\n  render() {\n    return <Dialog open={this.props.open} onClose={this.props.onClose}>\n      <DialogTitle id=\"form-dialog-title\">{this.props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {this.props.question}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        {(this.props.noAction != null ? <Button variant=\"contained\" color=\"primary\" onClick={this.handleNo}>{(this.props.yesAction != null ? \"No\" : \"Cancel\")}</Button> : void 0)}\n        {((this.props.yesAction != null) || !this.props.noAction ? <Button variant=\"contained\" color=\"primary\" onClick={this.handleYes}>{(this.props.noAction != null ? \"Yes\" : \"Ok\")}</Button> : void 0)}\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default ConfirmDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nimport React, { Component } from 'react';\n;\nvar CardChoices, CardList, GroupedCardList, MultipleCardChooser,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nGroupedCardList = function(props) {\n  var cards, id, selectedIds, typeId;\n  ({selectedIds, typeId, cards} = props);\n  return <ul>\n    {(function() {\n    var i, len, results;\n    results = [];\n    for (i = 0, len = selectedIds.length; i < len; i++) {\n      id = selectedIds[i];\n      if (cards[id].type === typeId) {\n        results.push(<li key={id}>\n          {cards[id].name}\n        </li>);\n      }\n    }\n    return results;\n  })()}\n  </ul>;\n};\n\nCardList = function(props) {\n  var cards, selectedIds, typeId, types, value;\n  ({selectedIds, cards, types} = props);\n  return <ul>\n    {(function() {\n    var results;\n    results = [];\n    for (typeId in types) {\n      value = types[typeId];\n      results.push(<li key={typeId}>\n          <b> {value.title} </b>\n          <GroupedCardList selectedIds={selectedIds} typeId={typeId} cards={cards} />\n        </li>);\n    }\n    return results;\n  })()}\n  </ul>;\n};\n\nCardChoices = class CardChoices extends Component {\n  constructor() {\n    super(...arguments);\n    this.changeEventHandler = this.changeEventHandler.bind(this);\n  }\n\n  changeEventHandler(cardId) {\n    boundMethodCheck(this, CardChoices);\n    return (event) => {\n      return this.props.onChange(cardId, event.target.checked);\n    };\n  }\n\n  render() {\n    var id, info;\n    return <FormGroup row>\n      {(function() {\n      var ref, results;\n      ref = this.props.cards;\n      results = [];\n      for (id in ref) {\n        info = ref[id];\n        if (info.type === this.props.type) {\n          results.push(<FormControlLabel key={id} control={<Checkbox checked={indexOf.call(this.props.value, id) >= 0} disabled={indexOf.call(this.props.excluded, id) >= 0} onChange={this.changeEventHandler(id)} value={id} />} label={info.name} />);\n        }\n      }\n      return results;\n    }).call(this)}\n    </FormGroup>;\n  }\n\n};\n\nMultipleCardChooser = class MultipleCardChooser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChangeTab(event, currentTab) {\n    boundMethodCheck(this, MultipleCardChooser);\n    return this.setState({currentTab});\n  }\n\n  render() {\n    var cards, excluded, id, tabId, tabIds, tabIndex, types, value;\n    ({value, cards, types, excluded} = this.props);\n    tabIds = (function() {\n      var results;\n      results = [];\n      for (id in types) {\n        results.push(id);\n      }\n      return results;\n    })();\n    tabIndex = this.state.currentTab >= 0 && this.state.currentTab < tabIds.length ? this.state.currentTab : 0;\n    tabId = tabIds[tabIndex];\n    return <div>\n      <AppBar position=\"static\">\n        <Tabs value={tabIndex} onChange={this.handleChangeTab}>\n          {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = tabIds.length; i < len; i++) {\n        id = tabIds[i];\n        results.push(<Tab key={id} label={types[id].title} />);\n      }\n      return results;\n    })()}\n        </Tabs>\n      </AppBar>\n      <CardChoices value={value} cards={cards} excluded={excluded} type={tabId} onChange={this.props.onChange} />\n      <h4>Selected Cards:</h4>\n      <CardList selectedIds={value} cards={cards} types={types} />\n    </div>;\n  }\n\n};\n\nexport default MultipleCardChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React, { Component } from 'react';\n;\nvar LogDialog, cardList, cardPhrase, playerList, suggestedCardsClause, transcribedList,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\ncardPhrase = function(card, configuration, usePreposition = true) {\n  var phrase, type;\n  type = configuration.types[card.type];\n  phrase = \"\";\n  if (usePreposition) {\n    phrase += type.preposition;\n  }\n  phrase += type.article;\n  phrase += card.name;\n  return phrase;\n};\n\ntranscribedList = function(list) {\n  var i, j, len, ref, string;\n  string = list[0];\n  if (list.length > 1) {\n    if (list.length > 2) {\n      ref = list.slice(1, -1);\n      for (j = 0, len = ref.length; j < len; j++) {\n        i = ref[j];\n        string += \", \" + i;\n      }\n      string += \", and \" + list[list.length - 1];\n    } else {\n      string += \" and \" + list[1];\n    }\n  }\n  return string;\n};\n\nplayerList = function(playerIds) {\n  return transcribedList(playerIds);\n};\n\ncardList = function(cardIds, configuration) {\n  var cards, id, names;\n  cards = configuration.cards;\n  names = (function() {\n    var j, len, results;\n    results = [];\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      results.push(cardPhrase(cards[id], configuration, false));\n    }\n    return results;\n  })();\n  return transcribedList(names);\n};\n\nsuggestedCardsClause = function(cardIds, configuration) {\n  var card1, card2, card3, cards, clause, id, suggestionOrder;\n  cards = configuration.cards;\n  suggestionOrder = configuration.suggestionOrder;\n  card1 = ((function() {\n    var j, len, results;\n    results = [];\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      if (cards[id].type === suggestionOrder[0]) {\n        results.push(cards[id]);\n      }\n    }\n    return results;\n  })())[0];\n  card2 = ((function() {\n    var j, len, results;\n    results = [];\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      if (cards[id].type === suggestionOrder[1]) {\n        results.push(cards[id]);\n      }\n    }\n    return results;\n  })())[0];\n  card3 = ((function() {\n    var j, len, results;\n    results = [];\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      if (cards[id].type === suggestionOrder[2]) {\n        results.push(cards[id]);\n      }\n    }\n    return results;\n  })())[0];\n  clause = cardPhrase(card1, configuration) + \" \";\n  clause += cardPhrase(card2, configuration) + \" \";\n  clause += cardPhrase(card3, configuration);\n  return clause;\n};\n\nLogDialog = class LogDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.describeSetup = this.describeSetup.bind(this);\n    this.describeHand = this.describeHand.bind(this);\n    this.describeSuggest = this.describeSuggest.bind(this);\n    this.describeShow = this.describeShow.bind(this);\n    this.describeAccuse = this.describeAccuse.bind(this);\n    this.describeEntry = this.describeEntry.bind(this);\n    this.configuration = null;\n  }\n\n  describeSetup(info) {\n    boundMethodCheck(this, LogDialog);\n    return `Playing ${this.configuration.name} with ${playerList(info.players)}.`;\n  }\n\n  describeHand(info) {\n    boundMethodCheck(this, LogDialog);\n    return `${info.player} has ${cardList(info.cards, this.configuration)}.`;\n  }\n\n  describeSuggest(info) {\n    boundMethodCheck(this, LogDialog);\n    return `${info.suggester} suggested ${suggestedCardsClause(info.cards, this.configuration)}. ${playerList(info.showed)} showed a card.`;\n  }\n\n  describeShow(info) {\n    var cards;\n    boundMethodCheck(this, LogDialog);\n    cards = this.configuration.cards;\n    return `${info.player} showed ${cardPhrase(cards[info.card], this.configuration, false)}.`;\n  }\n\n  describeAccuse(info) {\n    boundMethodCheck(this, LogDialog);\n    return `${info.accuser} accused ${suggestedCardsClause(info.cards, this.configuration)}. The accusation was ${(info.outcome ? \"\" : \"not \")}correct.`;\n  }\n\n  describeEntry(entry) {\n    boundMethodCheck(this, LogDialog);\n    if (entry.setup != null) {\n      return this.describeSetup(entry.setup);\n    } else if (entry.hand != null) {\n      return this.describeHand(entry.hand);\n    } else if (entry.suggest != null) {\n      return this.describeSuggest(entry.suggest);\n    } else if (entry.show != null) {\n      return this.describeShow(entry.show);\n    } else if (entry.accuse != null) {\n      return this.describeAccuse(entry.accuse);\n    } else {\n      return alert(\"Unknown log entry\");\n    }\n  }\n\n  render() {\n    var entry;\n    this.configuration = this.props.log[0] != null ? this.props.configurations[this.props.log[0].setup.variation] : null;\n    return <Dialog open={this.props.open} fullscreen=\"true\" onClose={this.props.onClose}>\n      <DialogTitle id=\"form-dialog-title\">Log</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List component=\"ol\" dense>\n            {(function() {\n      var j, len, ref, results;\n      ref = this.props.log;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        entry = ref[j];\n        results.push(<ListItem><ListItemText primary={this.describeEntry(entry)} /></ListItem>);\n      }\n      return results;\n    }).call(this)}\n          </List>\n        </DialogContentText>\n     </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.props.onClose}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default LogDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport MultipleCardChooser from './MultipleCardChooser'\nimport PlayerChooser from './PlayerChooser'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport React, { Component } from 'react';\n;\nvar HandDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nHandDialog = class HandDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangePlayer = this.handleChangePlayer.bind(this);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      playerId: null,\n      cardIds: []\n    };\n  }\n\n  handleChangePlayer(playerId) {\n    boundMethodCheck(this, HandDialog);\n    return this.setState({playerId});\n  }\n\n  handleChangeCards(cardId, selected) {\n    boundMethodCheck(this, HandDialog);\n    if (selected) {\n      return this.setState(function(state, props) {\n        if (indexOf.call(state.cardIds, cardId) < 0) {\n          return {\n            cardIds: state.cardIds.concat([cardId])\n          };\n        } else {\n          return null;\n        }\n      });\n    } else {\n      return this.setState(function(state, props) {\n        var id;\n        if (indexOf.call(state.cardIds, cardId) >= 0) {\n          return {\n            cardIds: (function() {\n              var i, len, ref, results;\n              ref = state.cardIds;\n              results = [];\n              for (i = 0, len = ref.length; i < len; i++) {\n                id = ref[i];\n                if (id !== cardId) {\n                  results.push(id);\n                }\n              }\n              return results;\n            })()\n          };\n        } else {\n          return null;\n        }\n      });\n    }\n  }\n\n  handleDone() {\n    boundMethodCheck(this, HandDialog);\n    if ((this.state.playerId != null) && this.state.cardIds.length > 0) {\n      this.props.app.recordHand(this.state.playerId, this.state.cardIds);\n      this.setState({\n        playerId: null,\n        cardIds: []\n      });\n      return this.props.onClose();\n    } else {\n      return this.props.app.showConfirmDialog(\"Error\", \"You must select a player and at least one card\");\n    }\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, HandDialog);\n    this.setState({\n      playerId: null,\n      cardIds: []\n    });\n    return this.props.onClose();\n  }\n\n  render() {\n    return <Dialog open={this.props.open} fullscreen=\"true\" onClose={this.handleCancel}>\n      <DialogTitle id=\"form-dialog-title\">Record Hand</DialogTitle>\n      <DialogContent>\n        <DialogContentText><h4>Which player?</h4></DialogContentText>\n        <PlayerChooser value={this.state.playerId} playerIds={this.props.playerIds} onChange={this.handleChangePlayer} />\n        <Divider />\n        <DialogContentText><h4>Select the cards in the player's hand:</h4></DialogContentText>\n        <MultipleCardChooser value={this.state.cardIds} cards={this.props.configuration.cards} types={this.props.configuration.types} excluded={[]} onChange={this.handleChangeCards} />\n     </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleDone}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default HandDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport PropTypes from 'prop-types'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\n;\nvar AddPlayerInput, ConfigurationChoices, ConfigurationChooser, PlayerList, Players, SetupDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nConfigurationChoices = function(props) {\n  var key, value;\n  return <RadioGroup row name=\"variations\" value={props.configurationId} onChange={props.onChange}>\n    {(function() {\n    var ref, results;\n    ref = props.configurations;\n    results = [];\n    for (key in ref) {\n      value = ref[key];\n      results.push(<FormControlLabel key={key} value={key} control={<Radio />} label={value.name} />);\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nConfigurationChooser = function(props) {\n  return <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\"><h4>Select a variation:</h4></FormLabel>\n      <ConfigurationChoices configurationId={props.configurationId} configurations={props.configurations} onChange={function(event) {\n      return props.onChange(event.target.value);\n    }} />\n    </FormControl>;\n};\n\nAddPlayerInput = class AddPlayerInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleAddPlayer = this.handleAddPlayer.bind(this);\n    this.state = {\n      playerId: ''\n    };\n  }\n\n  handleChange(event) {\n    boundMethodCheck(this, AddPlayerInput);\n    return this.setState({\n      playerId: event.target.value\n    });\n  }\n\n  handleKeyDown(event) {\n    boundMethodCheck(this, AddPlayerInput);\n    if (event.keyCode === 13) {\n      this.handleAddPlayer();\n    }\n  }\n\n  handleAddPlayer() {\n    var ref;\n    boundMethodCheck(this, AddPlayerInput);\n    if (this.state.playerId !== \"\") {\n      if (this.state.playerId !== \"ANSWER\" && (ref = this.state.playerId, indexOf.call(this.props.playerIds, ref) < 0)) {\n        this.props.onAddPlayer(this.state.playerId);\n      } else {\n        this.props.app.showConfirmDialog(\"Error\", \"A player's name must be unique and it cannot be ANSWER.\");\n      }\n      return this.setState({\n        playerId: ''\n      });\n    }\n  }\n\n  render() {\n    return <div>\n      <TextField autoFocus margin=\"normal\" value={this.state.playerId} onChange={this.handleChange} onKeyDown={this.handleKeyDown} />\n      <Button disabled={this.props.count >= this.props.max} variant=\"contained\" color=\"primary\" onClick={this.handleAddPlayer}>\n        Add\n      </Button>\n    </div>;\n  }\n\n};\n\nAddPlayerInput.propTypes = {\n  playerIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  count: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onAddPlayer: PropTypes.func.isRequired\n};\n\nPlayerList = function(props) {\n  return <ul>\n      {props.names.map((playerId) => {\n    return <li key={playerId}>{playerId}</li>;\n  })}\n    </ul>;\n};\n\nPlayerList.defaultProps = {\n  names: []\n};\n\nPlayers = function(props) {\n  return <div>\n      <AddPlayerInput playerIds={props.playerIds} count={props.playerIds.length} max={props.max} app={props.app} onAddPlayer={props.onAddPlayer} />\n      <PlayerList names={props.playerIds} />\n      <Button variant=\"contained\" color=\"primary\" onClick={props.onClearPlayers}>Clear Players</Button>\n    </div>;\n};\n\nSetupDialog = class SetupDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddPlayer = this.handleAddPlayer.bind(this);\n    this.handleClearPlayers = this.handleClearPlayers.bind(this);\n    this.handleChangeConfiguration = this.handleChangeConfiguration.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      playerIds: [],\n      configurationId: this.props.configurationId\n    };\n  }\n\n  handleAddPlayer(playerId) {\n    boundMethodCheck(this, SetupDialog);\n    return this.setState(function(state, props) {\n      return {\n        playerIds: state.playerIds.concat([playerId])\n      };\n    });\n  }\n\n  handleClearPlayers() {\n    boundMethodCheck(this, SetupDialog);\n    return this.setState({\n      playerIds: []\n    });\n  }\n\n  handleChangeConfiguration(configurationId) {\n    boundMethodCheck(this, SetupDialog);\n    return this.setState({configurationId});\n  }\n\n  handleDone() {\n    boundMethodCheck(this, SetupDialog);\n    this.props.onClose();\n    return this.props.app.newGame(this.state.configurationId, this.state.playerIds);\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, SetupDialog);\n    return this.props.onClose();\n  }\n\n  render() {\n    var maxPlayers, minPlayers, numPlayers;\n    numPlayers = this.state.playerIds.length;\n    minPlayers = this.props.configurations[this.state.configurationId].minPlayers;\n    maxPlayers = this.props.configurations[this.state.configurationId].maxPlayers;\n    return <Dialog open={this.props.open} onClose={this.handleCancel}>\n      <DialogTitle id=\"form-dialog-title\">New Game</DialogTitle>\n      <DialogContent>\n        <ConfigurationChooser configurationId={this.state.configurationId} configurations={this.props.configurations} onChange={this.handleChangeConfiguration} />\n        <Divider />\n        <DialogContentText><h4>Add players:</h4></DialogContentText>\n        <Players playerIds={this.state.playerIds} max={maxPlayers} app={this.props.app} onAddPlayer={this.handleAddPlayer} onClearPlayers={this.handleClearPlayers} />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button disabled={numPlayers < minPlayers} variant=\"contained\" color=\"primary\" onClick={this.handleDone}>\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default SetupDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport React, { Component } from 'react';\n\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n;\nvar MainMenu,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nMainMenu = class MainMenu extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleLog = this.handleLog.bind(this);\n  }\n\n  handleStart() {\n    boundMethodCheck(this, MainMenu);\n    this.props.app.showNewGameDialog();\n    return this.props.onClose();\n  }\n\n  handleClear() {\n    boundMethodCheck(this, MainMenu);\n    this.props.app.showConfirmDialog(\"Please confirm\", \"Are you sure you want to clear the current game?\", this.props.app.clearGame, function() {\n      return {};\n    });\n    return this.props.onClose();\n  }\n\n  handleLog() {\n    boundMethodCheck(this, MainMenu);\n    this.props.app.showLog();\n    return this.props.onClose();\n  }\n\n  render() {\n    return <Menu id=\"main-menu\" anchorEl={this.props.anchor} open={Boolean(this.props.anchor)} onClose={this.props.onClose}>\n      <MenuItem onClick={this.handleStart}>Start New Game</MenuItem>\n      <MenuItem onClick={this.handleClear}>Clear Current Game</MenuItem>\n      <MenuItem disabled={!this.props.enableShowLog} onClick={this.handleLog}>Show Log</MenuItem>\n    </Menu>;\n  }\n\n};\n\nexport default MainMenu;\n","// Generated by CoffeeScript 2.3.2\n\nimport AppBar from '@material-ui/core/AppBar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nimport React, { Component } from 'react';\n;\nvar CardChoices, CardChooser,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nCardChoices = function(props) {\n  var id, info;\n  return <RadioGroup row name=\"cards\" value={props.value} onChange={props.onChange}>\n    {(function() {\n    var ref, results;\n    ref = props.cards;\n    results = [];\n    for (id in ref) {\n      info = ref[id];\n      if (info.type === props.type) {\n        results.push(<FormControlLabel key={id} value={id} control={<Radio />} label={info.name} />);\n      }\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nCardChooser = class CardChooser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChangeTab(event, currentTab) {\n    boundMethodCheck(this, CardChooser);\n    return this.setState({currentTab});\n  }\n\n  render() {\n    var cards, id, tabId, tabIds, tabIndex, types, value;\n    ({value, cards, types} = this.props);\n    tabIds = (function() {\n      var results;\n      results = [];\n      for (id in types) {\n        results.push(id);\n      }\n      return results;\n    })();\n    tabIndex = this.state.currentTab >= 0 && this.state.currentTab < tabIds.length ? this.state.currentTab : 0;\n    tabId = tabIds[tabIndex];\n    return <div>\n      <AppBar position=\"static\">\n        <Tabs value={tabIndex} onChange={this.handleChangeTab}>\n          {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = tabIds.length; i < len; i++) {\n        id = tabIds[i];\n        results.push(<Tab key={id} label={types[id].title} />);\n      }\n      return results;\n    })()}\n        </Tabs>\n      </AppBar>\n      <FormControl component=\"fieldset\">\n        <CardChoices value={value} type={tabId} cards={cards} onChange={(event) => {\n        return this.props.onChange(event.target.value);\n      }} />\n      </FormControl>\n    </div>;\n  }\n\n};\n\nexport default CardChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport Solver from './Solver'\nimport TopBar from './TopBar'\n\nimport AccuseDialog from './AccuseDialog'\nimport Button from '@material-ui/core/Button';\nimport ConfirmDialog from './ConfirmDialog'\nimport CurrentState from './CurrentState'\nimport Divider from '@material-ui/core/Divider'\nimport HandDialog from './HandDialog'\nimport LogDialog from './LogDialog'\nimport MainMenu from './MainMenu'\nimport React, { Component } from 'react';\nimport SetupDialog from './SetupDialog'\nimport ShowDialog from './ShowDialog'\nimport SuggestDialog from './SuggestDialog'\n;\nvar App, classic, configurations, haunted_mansion, master_detective,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nclassic = {\n  name: \"Classic\",\n  rulesId: \"classic\",\n  minPlayers: 3,\n  maxPlayers: 6,\n  types: {\n    suspect: {\n      title: \"Suspects\",\n      preposition: \"\",\n      article: \"\"\n    },\n    weapon: {\n      title: \"Weapons\",\n      preposition: \"with \",\n      article: \"the \"\n    },\n    room: {\n      title: \"Rooms\",\n      preposition: \"in \",\n      article: \"the \"\n    }\n  },\n  cards: {\n    mustard: {\n      name: \"Colonel Mustard\",\n      type: \"suspect\"\n    },\n    white: {\n      name: \"Mrs. White\",\n      type: \"suspect\"\n    },\n    plum: {\n      name: \"Professor Plum\",\n      type: \"suspect\"\n    },\n    peacock: {\n      name: \"Mrs. Peacock\",\n      type: \"suspect\"\n    },\n    green: {\n      name: \"Mr. Green\",\n      type: \"suspect\"\n    },\n    scarlet: {\n      name: \"Miss Scarlet\",\n      type: \"suspect\"\n    },\n    revolver: {\n      name: \"Revolver\",\n      type: \"weapon\"\n    },\n    knife: {\n      name: \"Knife\",\n      type: \"weapon\"\n    },\n    rope: {\n      name: \"Rope\",\n      type: \"weapon\"\n    },\n    pipe: {\n      name: \"Lead pipe\",\n      type: \"weapon\"\n    },\n    wrench: {\n      name: \"Wrench\",\n      type: \"weapon\"\n    },\n    candlestick: {\n      name: \"Candlestick\",\n      type: \"weapon\"\n    },\n    dining: {\n      name: \"Dining Room\",\n      type: \"room\"\n    },\n    conservatory: {\n      name: \"Conservatory\",\n      type: \"room\"\n    },\n    kitchen: {\n      name: \"Kitchen\",\n      type: \"room\"\n    },\n    study: {\n      name: \"Study\",\n      type: \"room\"\n    },\n    library: {\n      name: \"Library\",\n      type: \"room\"\n    },\n    billiard: {\n      name: \"Billiards Room\",\n      type: \"room\"\n    },\n    lounge: {\n      name: \"Lounge\",\n      type: \"room\"\n    },\n    ballroom: {\n      name: \"Ballroom\",\n      type: \"room\"\n    },\n    hall: {\n      name: \"Hall\",\n      type: \"room\"\n    }\n  },\n  suggestionOrder: [\"suspect\", \"weapon\", \"room\"]\n};\n\nmaster_detective = {\n  name: \"Master Detective\",\n  rulesId: \"master\",\n  minPlayers: 3,\n  maxPlayers: 10,\n  types: {\n    suspect: {\n      title: \"Suspects\",\n      preposition: \"\",\n      article: \"\"\n    },\n    weapon: {\n      title: \"Weapons\",\n      preposition: \"with \",\n      article: \"the \"\n    },\n    room: {\n      title: \"Rooms\",\n      preposition: \"in \",\n      article: \"the \"\n    }\n  },\n  cards: {\n    mustard: {\n      name: \"Colonel Mustard\",\n      type: \"suspect\"\n    },\n    white: {\n      name: \"Mrs. White\",\n      type: \"suspect\"\n    },\n    plum: {\n      name: \"Professor Plum\",\n      type: \"suspect\"\n    },\n    peacock: {\n      name: \"Mrs. Peacock\",\n      type: \"suspect\"\n    },\n    green: {\n      name: \"Mr. Green\",\n      type: \"suspect\"\n    },\n    scarlet: {\n      name: \"Miss Scarlet\",\n      type: \"suspect\"\n    },\n    rose: {\n      name: \"Madame Rose\",\n      type: \"suspect\"\n    },\n    gray: {\n      name: \"Sergeant Gray\",\n      type: \"suspect\"\n    },\n    brunette: {\n      name: \"Monsieur Brunette\",\n      type: \"suspect\"\n    },\n    peach: {\n      name: \"Miss Peach\",\n      type: \"suspect\"\n    },\n    revolver: {\n      name: \"Revolver\",\n      type: \"weapon\"\n    },\n    knife: {\n      name: \"Knife\",\n      type: \"weapon\"\n    },\n    rope: {\n      name: \"Rope\",\n      type: \"weapon\"\n    },\n    pipe: {\n      name: \"Pipe\",\n      type: \"weapon\"\n    },\n    wrench: {\n      name: \"Wrench\",\n      type: \"weapon\"\n    },\n    candlestick: {\n      name: \"Candlestick\",\n      type: \"weapon\"\n    },\n    poison: {\n      name: \"Poison\",\n      type: \"weapon\"\n    },\n    horseshoe: {\n      name: \"Horseshoe\",\n      type: \"weapon\"\n    },\n    dining: {\n      name: \"Dining Room\",\n      type: \"room\"\n    },\n    conservatory: {\n      name: \"Conservatory\",\n      type: \"room\"\n    },\n    kitchen: {\n      name: \"Kitchen\",\n      type: \"room\"\n    },\n    studio: {\n      name: \"Studio\",\n      type: \"room\"\n    },\n    library: {\n      name: \"Library\",\n      type: \"room\"\n    },\n    billiard: {\n      name: \"Billiard Room\",\n      type: \"room\"\n    },\n    courtyard: {\n      name: \"Courtyard\",\n      type: \"room\"\n    },\n    gazebo: {\n      name: \"Gazebo\",\n      type: \"room\"\n    },\n    drawing: {\n      name: \"Drawing Room\",\n      type: \"room\"\n    },\n    carriage: {\n      name: \"Carriage House\",\n      type: \"room\"\n    },\n    trophy: {\n      name: \"Trophy Room\",\n      type: \"room\"\n    },\n    fountain: {\n      name: \"Fountain\",\n      type: \"room\"\n    }\n  },\n  suggestionOrder: [\"suspect\", \"weapon\", \"room\"]\n};\n\nhaunted_mansion = {\n  name: \"Haunted Mansion\",\n  rulesId: \"classic\",\n  minPlayers: 3,\n  maxPlayers: 6,\n  types: {\n    guest: {\n      title: \"Guests\",\n      preposition: \"haunted \",\n      article: \"\"\n    },\n    ghost: {\n      title: \"Ghosts\",\n      preposition: \"\",\n      article: \"the \"\n    },\n    room: {\n      title: \"Rooms\",\n      preposition: \"in \",\n      article: \"the \"\n    }\n  },\n  cards: {\n    pluto: {\n      name: \"Pluto\",\n      type: \"guest\"\n    },\n    daisy: {\n      name: \"Daisy Duck\",\n      type: \"guest\"\n    },\n    goofy: {\n      name: \"Goofy\",\n      type: \"guest\"\n    },\n    donald: {\n      name: \"Donald Duck\",\n      type: \"guest\"\n    },\n    minnie: {\n      name: \"Minnie Mouse\",\n      type: \"guest\"\n    },\n    mickey: {\n      name: \"Mickey Mouse\",\n      type: \"guest\"\n    },\n    prisoner: {\n      name: \"Prisoner\",\n      type: \"ghost\"\n    },\n    singer: {\n      name: \"Opera Singer\",\n      type: \"ghost\"\n    },\n    bride: {\n      name: \"Bride\",\n      type: \"ghost\"\n    },\n    traveler: {\n      name: \"Traveler\",\n      type: \"ghost\"\n    },\n    mariner: {\n      name: \"Mariner\",\n      type: \"ghost\"\n    },\n    skeleton: {\n      name: \"Candlestick\",\n      type: \"ghost\"\n    },\n    graveyard: {\n      name: \"Graveyard\",\n      type: \"room\"\n    },\n    seance: {\n      name: \"Seance Room\",\n      type: \"room\"\n    },\n    ballroom: {\n      name: \"Ballroom\",\n      type: \"room\"\n    },\n    attic: {\n      name: \"Attic\",\n      type: \"room\"\n    },\n    mausoleum: {\n      name: \"Mausoleum\",\n      type: \"room\"\n    },\n    conservatory: {\n      name: \"Conservatory\",\n      type: \"room\"\n    },\n    library: {\n      name: \"Library\",\n      type: \"room\"\n    },\n    foyer: {\n      name: \"Foyer\",\n      type: \"room\"\n    },\n    chamber: {\n      name: \"Portrait Chamber\",\n      type: \"room\"\n    }\n  },\n  suggestionOrder: [\"ghost\", \"guest\", \"room\"]\n};\n\nconfigurations = {\n  classic: classic,\n  master_detective: master_detective,\n  haunted_mansion: haunted_mansion\n};\n\nApp = class App extends Component {\n  constructor(props) {\n    super(props);\n    this.newGame = this.newGame.bind(this);\n    this.clearGame = this.clearGame.bind(this);\n    this.recordHand = this.recordHand.bind(this);\n    this.recordSuggestion = this.recordSuggestion.bind(this);\n    this.recordShown = this.recordShown.bind(this);\n    this.recordAccusation = this.recordAccusation.bind(this);\n    this.showNewGameDialog = this.showNewGameDialog.bind(this);\n    this.showHandDialog = this.showHandDialog.bind(this);\n    this.showSuggestDialog = this.showSuggestDialog.bind(this);\n    this.showShowDialog = this.showShowDialog.bind(this);\n    this.showAccuseDialog = this.showAccuseDialog.bind(this);\n    this.showLog = this.showLog.bind(this);\n    this.showConfirmDialog = this.showConfirmDialog.bind(this);\n    this.handleConfirmDialogClose = this.handleConfirmDialogClose.bind(this);\n    this.state = {\n      playerIds: [],\n      configurationId: \"master_detective\",\n      solver: null,\n      log: [],\n      mainMenuAnchor: null,\n      handDialogOpen: false,\n      suggestDialogOpen: false,\n      showDialogOpen: false,\n      accuseDialogOpen: false,\n      newGameDialogOpen: false,\n      confirmDialog: {\n        open: false,\n        title: '',\n        question: '',\n        yesAction: null,\n        noAction: null\n      },\n      logDialogOpen: false\n    };\n  }\n\n  setupLogEntry(configurationId, playerIds) {\n    return {\n      setup: {\n        variation: configurationId,\n        players: playerIds\n      }\n    };\n  }\n\n  logHandEntry(playerId, cardIds) {\n    return this.setState(function(state, props) {\n      return {\n        log: state.log.concat([\n          {\n            hand: {\n              player: playerId,\n              cards: cardIds\n            }\n          }\n        ])\n      };\n    });\n  }\n\n  logSuggestEntry(suggesterId, cardIds, showedIds) {\n    return this.setState(function(state, props) {\n      return {\n        log: state.log.concat([\n          {\n            suggest: {\n              suggester: suggesterId,\n              cards: cardIds,\n              showed: showedIds\n            }\n          }\n        ])\n      };\n    });\n  }\n\n  logShowEntry(playerId, cardId) {\n    return this.setState(function(state, props) {\n      return {\n        log: state.log.concat([\n          {\n            show: {\n              player: playerId,\n              card: cardId\n            }\n          }\n        ])\n      };\n    });\n  }\n\n  logAccuseEntry(accuserId, cardIds, outcome) {\n    return this.setState(function(state, props) {\n      return {\n        log: state.log.concat([\n          {\n            accuse: {\n              accuser: accuserId,\n              cards: cardIds,\n              outcome: outcome\n            }\n          }\n        ])\n      };\n    });\n  }\n\n  newGame(configurationId, playerIds) {\n    boundMethodCheck(this, App);\n    return this.setState({\n      playerIds: playerIds,\n      configurationId: configurationId,\n      solver: new Solver(configurations[configurationId], playerIds),\n      log: [this.setupLogEntry(configurationId, playerIds)]\n    });\n  }\n\n  clearGame() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      solver: null,\n      progress: 0,\n      log: []\n    });\n  }\n\n  recordHand(playerId, cardIds) {\n    boundMethodCheck(this, App);\n    if (this.state.solver != null) {\n      this.state.solver.hand(playerId, cardIds);\n      return this.logHandEntry(playerId, cardIds);\n    }\n  }\n\n  recordSuggestion(suggesterId, cardIds, showedIds) {\n    boundMethodCheck(this, App);\n    if (this.state.solver != null) {\n      this.state.solver.suggest(suggesterId, cardIds, showedIds, this.state.progress);\n      return this.logSuggestEntry(suggesterId, cardIds, showedIds);\n    }\n  }\n\n  recordShown(playerId, cardId) {\n    boundMethodCheck(this, App);\n    if (this.state.solver != null) {\n      this.state.solver.show(playerId, cardId);\n      return this.logShowEntry(playerId, cardId);\n    }\n  }\n\n  recordAccusation(accuserId, cardIds, outcome) {\n    boundMethodCheck(this, App);\n    if (this.state.solver != null) {\n      this.state.solver.accuse(accuserId, cardIds, outcome);\n      return this.logAccuseEntry(accuserId, cardIds, outcome);\n    }\n  }\n\n  showMainMenu(anchor) {\n    return this.setState({\n      mainMenuAnchor: anchor\n    });\n  }\n\n  showNewGameDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      newGameDialogOpen: true\n    });\n  }\n\n  showHandDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      handDialogOpen: true\n    });\n  }\n\n  showSuggestDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      suggestDialogOpen: true\n    });\n  }\n\n  showShowDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      showDialogOpen: true\n    });\n  }\n\n  showAccuseDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      accuseDialogOpen: true\n    });\n  }\n\n  showLog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      logDialogOpen: true\n    });\n  }\n\n  showConfirmDialog(title, question, yesAction, noAction) {\n    boundMethodCheck(this, App);\n    return this.setState({\n      confirmDialog: {\n        open: true,\n        title,\n        question,\n        yesAction,\n        noAction\n      }\n    });\n  }\n\n  handleConfirmDialogClose() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      confirmDialog: {\n        open: false,\n        title: '',\n        question: '',\n        yesAction: null,\n        noAction: null\n      }\n    });\n  }\n\n  render() {\n    return <div className=\"App\">\n      <TopBar app={this} />\n      {(this.state.solver != null ? <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.showHandDialog}>Hand</Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.showSuggestDialog}>Suggest</Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.showShowDialog}>Show</Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.showAccuseDialog}>Accuse</Button>\n            <Divider />\n            <CurrentState solver={this.state.solver} app={this} /> \n          </div> : void 0)}\n      <MainMenu anchor={this.state.mainMenuAnchor} enableShowLog={(this.state.log != null) && this.state.log.length > 0} onClose={() => {\n        return this.setState({\n          mainMenuAnchor: null\n        });\n      }} app={this} />\n      <SetupDialog open={this.state.newGameDialogOpen} configurations={configurations} playerIds={this.state.playerIds} configurationId={this.state.configurationId} onClose={() => {\n        return this.setState({\n          newGameDialogOpen: false\n        });\n      }} app={this} />\n      <HandDialog open={this.state.handDialogOpen} configuration={configurations[this.state.configurationId]} playerIds={this.state.playerIds} onClose={() => {\n        return this.setState({\n          handDialogOpen: false\n        });\n      }} app={this} />\n      <SuggestDialog open={this.state.suggestDialogOpen} configuration={configurations[this.state.configurationId]} playerIds={this.state.playerIds} onClose={() => {\n        return this.setState({\n          suggestDialogOpen: false\n        });\n      }} app={this} />\n      <ShowDialog open={this.state.showDialogOpen} configuration={configurations[this.state.configurationId]} playerIds={this.state.playerIds} onClose={() => {\n        return this.setState({\n          showDialogOpen: false\n        });\n      }} app={this} />\n      <AccuseDialog open={this.state.accuseDialogOpen} configuration={configurations[this.state.configurationId]} playerIds={this.state.playerIds} onClose={() => {\n        return this.setState({\n          accuseDialogOpen: false\n        });\n      }} app={this} />\n      <LogDialog open={this.state.logDialogOpen} log={this.state.log} configurations={configurations} onClose={() => {\n        return this.setState({\n          logDialogOpen: false\n        });\n      }} app={this} />\n      <ConfirmDialog open={this.state.confirmDialog.open} title={this.state.confirmDialog.title} question={this.state.confirmDialog.question} yesAction={this.state.confirmDialog.yesAction} noAction={this.state.confirmDialog.noAction} onClose={this.handleConfirmDialogClose} app={this} />\n    </div>;\n  }\n\n};\n\nexport default App;\n","// Generated by CoffeeScript 2.3.2\n\nimport PlayerChooser from './PlayerChooser'\nimport CardChooser from './CardChooser'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\n\nimport React, { Component } from 'react';\n;\nvar ShowDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nShowDialog = class ShowDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangePlayer = this.handleChangePlayer.bind(this);\n    this.handleChangeCard = this.handleChangeCard.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      playerId: null,\n      cardId: null\n    };\n  }\n\n  handleChangePlayer(playerId) {\n    boundMethodCheck(this, ShowDialog);\n    return this.setState({playerId});\n  }\n\n  handleChangeCard(cardId) {\n    boundMethodCheck(this, ShowDialog);\n    return this.setState({cardId});\n  }\n\n  handleDone() {\n    boundMethodCheck(this, ShowDialog);\n    if ((this.state.playerId != null) && (this.state.cardId != null)) {\n      this.props.app.recordShown(this.state.playerId, this.state.cardId);\n      this.setState({\n        playerId: null,\n        cardId: null\n      });\n      return this.props.onClose();\n    } else {\n      return this.props.app.showConfirmDialog(\"Error\", \"You must select a player and a card\");\n    }\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, ShowDialog);\n    this.setState({\n      playerId: null,\n      cardId: null\n    });\n    return this.props.onClose();\n  }\n\n  render() {\n    return <Dialog open={this.props.open} onClose={this.handleCancel}>\n      <DialogTitle id=\"form-dialog-title\">Record A Shown Card</DialogTitle>\n      <DialogContent>\n        <DialogContentText><h4>Who showed the card?</h4></DialogContentText>\n        <PlayerChooser value={this.state.playerId} playerIds={this.props.playerIds} onChange={this.handleChangePlayer} />\n        <Divider />\n        <DialogContentText><h4>What card did they show?</h4></DialogContentText>\n        <CardChooser value={this.state.cardId} cards={this.props.configuration.cards} types={this.props.configuration.types} onChange={this.handleChangeCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleDone}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default ShowDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport React, {Component} from 'react';\n;\nvar MultiplePlayerChooser,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nMultiplePlayerChooser = class MultiplePlayerChooser extends Component {\n  constructor() {\n    super(...arguments);\n    this.changeEventHandler = this.changeEventHandler.bind(this);\n  }\n\n  changeEventHandler(playerId) {\n    boundMethodCheck(this, MultiplePlayerChooser);\n    return (event) => {\n      return this.props.onChange(playerId, event.target.checked);\n    };\n  }\n\n  render() {\n    var excluded, id, playerIds, value;\n    ({value, playerIds, excluded} = this.props);\n    return <FormGroup row>\n      {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = playerIds.length; i < len; i++) {\n        id = playerIds[i];\n        results.push(<FormControlLabel key={id} value={id} control={<Checkbox checked={indexOf.call(value, id) >= 0} disabled={indexOf.call(excluded, id) >= 0} onChange={this.changeEventHandler(id)} value={id} />} label={id} />);\n      }\n      return results;\n    }).call(this)}\n    </FormGroup>;\n  }\n\n};\n\nexport default MultiplePlayerChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport PerCategoryCardChooser from './PerCategoryCardChooser'\nimport MultiplePlayerChooser from './MultiplePlayerChooser'\nimport PlayerChooser from './PlayerChooser'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport React, { Component } from 'react';\n;\nvar SuggestDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nSuggestDialog = class SuggestDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeSuggesterId = this.handleChangeSuggesterId.bind(this);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n    this.handleChangeShowedIds = this.handleChangeShowedIds.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      suggesterId: null,\n      cardIds: {},\n      showedIds: []\n    };\n  }\n\n  handleChangeSuggesterId(playerId) {\n    boundMethodCheck(this, SuggestDialog);\n    return this.setState({\n      suggesterId: playerId\n    });\n  }\n\n  handleChangeCards(typeId, cardId) {\n    boundMethodCheck(this, SuggestDialog);\n    return this.setState(function(state, props) {\n      var newCardIds;\n      newCardIds = Object.assign({}, state.cardIds);\n      newCardIds[typeId] = cardId;\n      return {\n        cardIds: newCardIds\n      };\n    });\n  }\n\n  handleChangeShowedIds(playerId, selected) {\n    boundMethodCheck(this, SuggestDialog);\n    if (selected) {\n      return this.setState(function(state, props) {\n        if (indexOf.call(state.showedIds, playerId) < 0) {\n          return {\n            showedIds: state.showedIds.concat([playerId])\n          };\n        } else {\n          return null;\n        }\n      });\n    } else {\n      return this.setState(function(state, props) {\n        var id;\n        if (indexOf.call(state.showedIds, playerId) >= 0) {\n          return {\n            showedIds: (function() {\n              var i, len, ref, results;\n              ref = state.showedIds;\n              results = [];\n              for (i = 0, len = ref.length; i < len; i++) {\n                id = ref[i];\n                if (id !== playerId) {\n                  results.push(id);\n                }\n              }\n              return results;\n            })()\n          };\n        } else {\n          return null;\n        }\n      });\n    }\n  }\n\n  handleDone() {\n    var cardId, cardIds, typeId;\n    boundMethodCheck(this, SuggestDialog);\n    cardIds = (function() {\n      var ref, results;\n      ref = this.state.cardIds;\n      results = [];\n      for (typeId in ref) {\n        cardId = ref[typeId];\n        results.push(cardId);\n      }\n      return results;\n    }).call(this);\n    if ((this.state.suggesterId != null) && cardIds.length === 3 && this.state.showedIds.length <= 3) {\n      if (this.state.showedIds.length > 0) {\n        this.props.app.recordSuggestion(this.state.suggesterId, cardIds, this.state.showedIds);\n        this.setState({\n          suggesterId: null,\n          cardIds: {},\n          showedIds: []\n        });\n        return this.props.onClose();\n      } else {\n        return this.props.app.showConfirmDialog(\"Please confirm\", \"Are you sure that nobody showed any cards?\", () => {\n          this.props.app.recordSuggestion(this.state.suggesterId, cardIds, this.state.showedIds);\n          this.setState({\n            suggesterId: null,\n            cardIds: {},\n            showedIds: []\n          });\n          return this.props.onClose();\n        }, function() {\n          return {};\n        });\n      }\n    } else {\n      return this.props.app.showConfirmDialog(\"Error\", \"You must select a suggester, 3 cards, and up to 3 players who showed cards.\");\n    }\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, SuggestDialog);\n    this.setState({\n      suggesterId: null,\n      cardIds: {},\n      showedIds: []\n    });\n    return this.props.onClose();\n  }\n\n  render() {\n    return <Dialog open={this.props.open} onClose={this.handleCancel}>\n      <DialogTitle id=\"form-dialog-title\">Record A Suggestion</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <h4>Who made the suggestion?</h4>\n        </DialogContentText>\n        <PlayerChooser value={this.state.suggesterId} playerIds={this.props.playerIds} onChange={this.handleChangeSuggesterId} />\n        <Divider />\n        <DialogContentText>\n          <h4>What cards were suggested?</h4>\n        </DialogContentText>\n        <PerCategoryCardChooser value={this.state.cardIds} cards={this.props.configuration.cards} types={this.props.configuration.types} onChange={this.handleChangeCards} />\n        <Divider />\n        <DialogContentText>\n          <h4>Who showed cards?</h4>\n        </DialogContentText>\n        <MultiplePlayerChooser value={this.state.showedIds} playerIds={this.props.playerIds} excluded={this.state.suggesterId !== null ? [this.state.suggesterId] : []} onChange={this.handleChangeShowedIds} />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleDone}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default SuggestDialog;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Generated by CoffeeScript 2.3.2\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n;\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}