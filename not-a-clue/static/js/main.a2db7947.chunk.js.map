{"version":3,"sources":["Solver.js","CurrentState.js","TopBar.js","ConfirmDialog.js","MultipleCardChooser.js","PlayerChooser.js","SetupDialog.js","HandDialog.js","MainMenu.js","CardChooser.js","PerCategoryCardChooser.js","ShowDialog.js","App.js","MultiplePlayerChooser.js","SuggestDialog.js","registerServiceWorker.js","index.js"],"names":["Card","Player","indexOf","holders1","info1","Object","classCallCheck","this","holders","info","createClass","key","value","playerId","filter","h","call","length","cardIds","potential","cardId","c","count","held","j","len","mightHold","Solver","HeaderRow","StateElement","StateGrid","StateRow","configuration","playerIds","id","p","playerIdsIncludingAnswer","ref","ANSWER_PLAYER_ID","rulesId","types","cards","players","discoveriesLog","suggestions","facts","results","push","concat","ANSWER","cardsIds","changed","deduceFromHand","makeOtherDeductions","deduceFromShow","showedIds","suggestion","deduceFromSuggestion","playerIsValid","cardIsValid","typeId","deduceFromSuggestionWithMasterRules","deduceFromSuggestionWithClassicRules","hand","addDiscovery","associatePlayerWithCard","disassociatePlayerWithCard","i","mustHoldId","suggesterId","addDiscoveries","disassociatePlayerWithCards","mustHoldOne","player","s","addCardHoldersToDiscoveries","checkThatAnswerHoldsExactlyOneOfEach","card","heldByAnswer","heldId","heldType","k","l","len1","len2","onlyPossible","ref1","isHeldBy","type","slice","only","disassociateOtherPlayersWithCard","remove","otherId","holds","reason","cardInfo","discovery","f","fact","article","name","arguments","undefined","TopBar","props","react_default","a","createElement","AppBar_default","position","Toolbar_default","IconButton_default","color","onClick","event","app","showMainMenu","currentTarget","Menu_default","Typography_default","variant","boundMethodCheck","instance","Constructor","Error","ConfirmDialog","_Component","_this","possibleConstructorReturn","getPrototypeOf","apply","handleYes","bind","assertThisInitialized","handleNo","inherits","console","log","onClose","yesAction","noAction","open","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","question","DialogActions_default","Button_default","Component","Icon_default","mightBeHeldBy","Grid_default","container","item","xs","justify","CurrentState_StateElement","CurrentState_HeaderRow","CurrentState_StateRow","CurrentState","CardChoices","CardList","GroupedCardList","showHandDialog","showSuggestDialog","showShowDialog","CurrentState_StateGrid","solver","selectedIds","title","MultipleCardChooser_GroupedCardList","FormGroup_default","row","FormControlLabel_default","control","Checkbox_default","checked","disabled","excluded","onChange","label","MultipleCardChooser","PlayerChoices","handleChangeTab","handleChangeCards","state","currentTab","setState","_this2","target","tabId","tabIds","tabIndex","_this$props","Tabs_default","Tab_default","MultipleCardChooser_CardChoices","MultipleCardChooser_CardList","RadioGroup_default","Radio_default","PlayerChooser","AddPlayerInput","ConfigurationChoices","ConfigurationChooser","PlayerList","Players","FormControl_default","component","PlayerChooser_PlayerChoices","HandDialog","handleChangePlayer","handleDone","handleCancel","selected","recordHand","showConfirmDialog","fullscreen","src_PlayerChooser","Divider_default","src_MultipleCardChooser","MainMenu","handleStart","handleClear","showNewGameDialog","clearGame","core_Menu_default","anchorEl","anchor","Boolean","MenuItem_default","configurationId","configurations","FormLabel_default","SetupDialog_ConfigurationChoices","handleChange","handleAddPlayer","onAddPlayer","TextField_default","autoFocus","margin","max","propTypes","PropTypes","arrayOf","string","isRequired","number","func","names","map","defaultProps","SetupDialog_AddPlayerInput","SetupDialog_PlayerList","onClearPlayers","SetupDialog","_Component2","handleClearPlayers","handleChangeConfiguration","newGame","maxPlayers","minPlayers","numPlayers","SetupDialog_ConfigurationChooser","SetupDialog_Players","CardChooser","CardChooser_CardChoices","ShowDialog","handleChangeCard","recordShown","src_CardChooser","PerCategoryCardChooser","PerCategoryCardChooser_CardChoices","PerCategoryCardChooser_CardList","MultiplePlayerChooser","SuggestDialog","handleChangeSuggesterId","handleChangeShowedIds","newCardIds","assign","recordSuggestion","src_PerCategoryCardChooser","src_MultiplePlayerChooser","classic","suspect","preposition","weapon","room","mustard","white","plum","peacock","green","scarlet","revolver","knife","rope","pipe","wrench","candlestick","dining","conservatory","kitchen","study","library","billiard","lounge","ballroom","hall","master_detective","rose","gray","brunette","peach","poison","horseshoe","studio","courtyard","gazebo","drawing","carriage","trophy","fountain","haunted_mansion","guest","ghost","pluto","daisy","goofy","donald","minnie","mickey","prisoner","singer","bride","traveler","mariner","skeleton","graveyard","seance","attic","mausoleum","foyer","chamber","App","handleShowDialogClose","handleNewGameDialogClose","handleConfirmDialogClose","progress","mainMenuAnchor","handDialogOpen","suggestDialogOpen","showDialogOpen","newGameDialogOpen","confirmDialog","suggest","show","className","src_TopBar","src_CurrentState","src_MainMenu","src_SetupDialog","src_HandDialog","src_SuggestDialog","src_ShowDialog","src_ConfirmDialog","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a2db7947.chunk.js","sourcesContent":["// Generated by CoffeeScript 2.3.2\nvar Card, Player, Solver,\n  indexOf = [].indexOf;\n\nCard = class Card {\n  constructor(holders1, info1) {\n    this.holders = holders1;\n    this.info = info1;\n  }\n\n  remove(playerId) {\n    return this.holders = this.holders.filter(function(h) {\n      return h !== playerId;\n    });\n  }\n\n  mightBeHeldBy(playerId) {\n    return indexOf.call(this.holders, playerId) >= 0;\n  }\n\n  isHeldBy(playerId) {\n    return this.holders.length === 1 && this.holders[0] === playerId;\n  }\n\n};\n\nPlayer = class Player {\n  constructor(cardIds) {\n    this.potential = cardIds;\n  }\n\n  remove(cardId) {\n    return this.potential = this.potential.filter(function(c) {\n      return c !== cardId;\n    });\n  }\n\n  mightHold(cardId) {\n    return indexOf.call(this.potential, cardId) >= 0;\n  }\n\n  mustHoldOne(cardIds) {\n    var c, count, held, j, len;\n    count = 0;\n    held = null;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      c = cardIds[j];\n      if (this.mightHold(c)) {\n        ++count;\n        if (count > 1) { // Early out -- might hold more than one, so no\n          return null;\n        }\n        held = c; // Assuming for now that none of the others are held\n      }\n    }\n    return held;\n  }\n\n};\n\nSolver = class Solver {\n  constructor(configuration, playerIds) {\n    var cardIds, id, info, j, len, p, playerIdsIncludingAnswer, ref;\n    this.ANSWER_PLAYER_ID = \"ANSWER\"; // The answer is treated as a player\n    this.rulesId = configuration.rulesId;\n    this.types = configuration.types;\n    this.cards = {};\n    this.players = {};\n    this.discoveriesLog = [];\n    this.suggestions = [];\n    this.facts = [];\n    //    console.log(\"configuration.cards = \" + JSON.stringify(configuration.cards, null, 2))\n    cardIds = (function() {\n      var ref, results;\n      ref = configuration.cards;\n      results = [];\n      for (id in ref) {\n        info = ref[id];\n        results.push(id);\n      }\n      return results;\n    })();\n    //    console.log(\"solver.cardIds = #{cardIds}\")\n    playerIdsIncludingAnswer = playerIds.concat(this.ANSWER_PLAYER_ID);\n    ref = configuration.cards;\n    for (id in ref) {\n      info = ref[id];\n      this.cards[id] = new Card(playerIdsIncludingAnswer, info);\n    }\n    for (j = 0, len = playerIdsIncludingAnswer.length; j < len; j++) {\n      p = playerIdsIncludingAnswer[j];\n      this.players[p] = new Player(cardIds);\n    }\n    this.ANSWER = this.players[this.ANSWER_PLAYER_ID];\n  }\n\n  //    console.log(\"solver.players = \" + JSON.stringify(@players, null, 2))\n  hand(playerId, cardsIds) {\n    var changed;\n    this.discoveriesLog = [];\n    changed = false;\n    changed = this.deduceFromHand(playerId, cardsIds, changed);\n    changed = this.makeOtherDeductions(changed);\n    return changed;\n  }\n\n  show(playerId, cardId) {\n    var changed;\n    this.discoveriesLog = [];\n    changed = false;\n    changed = this.deduceFromShow(playerId, cardId, changed);\n    changed = this.makeOtherDeductions(changed);\n    return changed;\n  }\n\n  suggest(playerId, cardIds, showedIds, id) {\n    var changed, suggestion;\n    this.discoveriesLog = [];\n    suggestion = {id, playerId, cardIds, showedIds};\n    this.suggestions.push(suggestion);\n    changed = false;\n    changed = this.deduceFromSuggestion(suggestion, changed);\n    changed = this.makeOtherDeductions(changed);\n    return changed;\n  }\n\n  cardsThatMightBeHeldBy(playerId) {\n    return this.players[playerId].potential;\n  }\n\n  whoMightHold(cardId) {\n    return this.cards[cardId].holders;\n  }\n\n  playersAreValid(playerIds) {\n    var j, len, p;\n    for (j = 0, len = playerIds.length; j < len; j++) {\n      p = playerIds[j];\n      if (!this.playerIsValid(p)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  playerIsValid(playerId) {\n    //    console.log(\"playerIsValid: return #{playerId} isnt #{@ANSWER_PLAYER_ID} and #{playerId} of #{@players}\")\n    return playerId !== this.ANSWER_PLAYER_ID && playerId in this.players;\n  }\n\n  cardsAreValid(cardIds) {\n    var c, j, len;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      c = cardIds[j];\n      if (!this.cardIsValid(c)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  cardIsValid(cardId) {\n    return cardId in this.cards;\n  }\n\n  typeIsValid(typeId) {\n    return indexOf.call(this.types, typeId) >= 0;\n  }\n\n  deduceFromSuggestion(suggestion, changed) {\n    if (this.rulesId === \"master\") {\n      return this.deduceFromSuggestionWithMasterRules(suggestion, changed);\n    } else {\n      return this.deduceFromSuggestionWithClassicRules(suggestion, changed);\n    }\n  }\n\n  // Make deductions based on the player having exactly these cards\n  deduceFromHand(playerId, hand, changed) {\n    var cardId;\n// Associate the player with every card in the hand and disassociate the player with every other card.\n    for (cardId in this.cards) {\n      if (indexOf.call(hand, cardId) >= 0) {\n        this.addDiscovery(playerId, cardId, true, \"hand\");\n        changed = this.associatePlayerWithCard(playerId, cardId, changed);\n      } else {\n        this.addDiscovery(playerId, cardId, false, \"hand\");\n        changed = this.disassociatePlayerWithCard(playerId, cardId, changed);\n      }\n    }\n    return changed;\n  }\n\n  \n  // Make deductions based on the player having this cardId\n  deduceFromShow(playerId, cardId, changed) {\n    this.addDiscovery(playerId, cardId, true, \"revealed\");\n    changed = this.associatePlayerWithCard(playerId, cardId, changed);\n    return changed;\n  }\n\n  deduceFromSuggestionWithClassicRules(suggestion, changed) {\n    var cardIds, i, id, j, mustHoldId, player, playerId, ref, showedIds, suggesterId;\n    id = suggestion.id;\n    suggesterId = suggestion.playerId;\n    cardIds = suggestion.cardIds;\n    showedIds = suggestion.showedIds;\n    // You can deduce from a suggestion that:\n    //    If nobody showed a card, then none of the players (except possibly the suggester or the answer) have the cards.\n    //    Only the last player in the showed list might hold any of the suggested cards.\n    //    If the player that showed a card does not hold all but one of the cards, the player must hold the one.\n    if (showedIds === null || showedIds.length === 0) {\n      for (playerId in this.players) {\n        if (playerId !== this.ANSWER_PLAYER_ID && playerId !== suggesterId) {\n          this.addDiscoveries(playerId, cardIds, false, \"did not show a card in suggestion #\" + id);\n          changed = this.disassociatePlayerWithCards(playerId, cardIds, changed);\n        }\n      }\n    } else {\n// All but the last player have none of the cards\n      for (i = j = 0, ref = showedIds.length - 1; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {\n        playerId = showedIds[i];\n        this.addDiscoveries(playerId, cardIds, false, \"did not show a card in suggestion #\" + id);\n        changed = this.disassociatePlayerWithCards(playerId, cardIds, changed);\n      }\n      // The last player showed a card.\n      // If the player does not hold all but one of cards, the player must hold the one.\n      playerId = showedIds[showedIds.length - 1];\n      player = this.players[playerId];\n      mustHoldId = player.mustHoldOne(cardIds);\n      if (mustHoldId !== null) {\n        this.addDiscovery(playerId, mustHoldId, true, \"showed a card in suggestion #\" + id + \", and does not hold the others\");\n        changed = this.associatePlayerWithCard(playerId, mustHoldId, changed);\n      }\n    }\n    return changed;\n  }\n\n  deduceFromSuggestionWithMasterRules(suggestion, changed) {\n    var cardIds, id, mustHoldId, player, playerId, ref, showedIds, suggesterId;\n    id = suggestion.id;\n    suggesterId = suggestion.playerId;\n    cardIds = suggestion.cardIds;\n    showedIds = suggestion.showedIds;\n    ref = this.players;\n    // You can deduce from a suggestion that:\n    //    If a player shows a card but does not have all but one of the suggested cards, the player must hold the one.\n    //    If a player (other than the answer and suggester) does not show a card, the player has none of the suggested cards.\n    //    If all suggested cards are shown, then the answer and the suggester hold none of the suggested cards.\n    for (playerId in ref) {\n      player = ref[playerId];\n      // If the player showed a card ...\n      if (indexOf.call(showedIds, playerId) >= 0) {\n        // ..., then if the player does not hold all but one of the cards, the player must hold the one.\n        mustHoldId = player.mustHoldOne(cardIds);\n        if (mustHoldId !== null) {\n          this.addDiscovery(playerId, mustHoldId, true, \"showed a card in suggestion #\" + id + \", and does not hold the others\");\n          changed = this.associatePlayerWithCard(playerId, mustHoldId, changed);\n        }\n      // Otherwise, if the player is other than the answer and suggester ...\n      } else if (playerId !== this.ANSWER_PLAYER_ID && playerId !== suggesterId) {\n        // ... then they don't hold any of them.\n        this.addDiscoveries(playerId, cardIds, false, \"did not show a card in suggestion #\" + id);\n        this.disassociatePlayerWithCards(playerId, suggestion.cardIds, changed);\n      } else {\n        // Otherwise, for the answer and suggester, if 3 cards were shown ...\n        if (showedIds.length === 3) {\n          // ... then they don't hold them.\n          this.addDiscoveries(playerId, cardIds, false, \"all three cards were shown by other players in suggestion #\" + id);\n          changed = this.disassociatePlayerWithCards(playerId, cardIds, changed);\n        }\n      }\n    }\n    return changed;\n  }\n\n  makeOtherDeductions(changed) {\n    var j, len, ref, s;\n    this.addCardHoldersToDiscoveries();\n    changed = this.checkThatAnswerHoldsExactlyOneOfEach(changed);\n    // While something has changed, then keep re-applying all the suggestions\n    while (changed) {\n      changed = false;\n      ref = this.suggestions;\n      for (j = 0, len = ref.length; j < len; j++) {\n        s = ref[j];\n        changed = this.deduceFromSuggestion(s, changed);\n      }\n      this.addCardHoldersToDiscoveries();\n      changed = this.checkThatAnswerHoldsExactlyOneOfEach(changed);\n    }\n    this.addCardHoldersToDiscoveries();\n    return changed;\n  }\n\n  checkThatAnswerHoldsExactlyOneOfEach(changed) {\n    var answer, card, cardId, heldByAnswer, heldId, heldType, info, j, k, l, len, len1, len2, onlyPossible, potential, ref, ref1, typeId;\n    answer = this.players[this.ANSWER_PLAYER_ID];\n    // Find the cards that are known to be held by the answer\n    heldByAnswer = {};\n    ref = answer.potential;\n    for (j = 0, len = ref.length; j < len; j++) {\n      cardId = ref[j];\n      card = this.cards[cardId];\n      if (card.isHeldBy(this.ANSWER_PLAYER_ID)) {\n        heldByAnswer[card.info.type] = cardId;\n      }\n    }\n    // If so, then the answer can not hold any other cards of the same types\n    potential = this.ANSWER.potential.slice(0);\n    for (k = 0, len1 = potential.length; k < len1; k++) {\n      cardId = potential[k];\n      card = this.cards[cardId];\n      for (heldType in heldByAnswer) {\n        heldId = heldByAnswer[heldType];\n        if (card.info.type === heldType && cardId !== heldId) {\n          this.addDiscovery(this.ANSWER_PLAYER_ID, cardId, false, \"ANSWER can only hold one \" + heldType);\n          changed = this.disassociatePlayerWithCard(this.ANSWER_PLAYER_ID, cardId, changed);\n        }\n      }\n    }\n    // For each type, if there is only one card that might be held by the answer, then it must be held by the answer\n    onlyPossible = {};\n    ref1 = this.ANSWER.potential;\n    for (l = 0, len2 = ref1.length; l < len2; l++) {\n      cardId = ref1[l];\n      card = this.cards[cardId];\n      if (!card.isHeldBy(this.ANSWER_PLAYER_ID)) {\n        typeId = card.info.type;\n        if (onlyPossible[typeId] != null) {\n          onlyPossible[typeId].only = false;\n        } else {\n          onlyPossible[typeId] = {\n            cardId: cardId,\n            only: true\n          };\n        }\n      }\n    }\n    for (typeId in onlyPossible) {\n      info = onlyPossible[typeId];\n      if (info.only) {\n        this.addDiscovery(this.ANSWER_PLAYER_ID, info.cardId, true, \"Only \" + typeId + \" that ANSWER can hold\");\n        changed = this.associatePlayerWithCard(this.ANSWER_PLAYER_ID, info.cardId, changed);\n      }\n    }\n    return changed;\n  }\n\n  associatePlayerWithCard(playerId, cardId, changed) {\n    if (this.cards[cardId].holders.length === 1) { // Already associated\n      return changed;\n    }\n    return this.disassociateOtherPlayersWithCard(playerId, cardId, changed); // Simply remove all others as potential holders\n  }\n\n  disassociatePlayerWithCard(playerId, cardId, changed) {\n    var player;\n    player = this.players[playerId];\n    if (player.mightHold(cardId)) {\n      player.remove(cardId);\n      this.cards[cardId].remove(playerId);\n      changed = true;\n      this.addDiscovery(playerId, cardId, false); // Add this discovery, but don't log it \n    }\n    return changed;\n  }\n\n  disassociatePlayerWithCards(playerId, cardIds, changed) {\n    var id, j, len;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      id = cardIds[j];\n      //    console.log(\"disassociatePlayerWithCards: (playerId: #{playerId}, cardIds: #{cardIds}, changed: #{changed}) ->\")\n      changed = this.disassociatePlayerWithCard(playerId, id, changed);\n    }\n    return changed;\n  }\n\n  disassociateOtherPlayersWithCard(playerId, cardId, changed) {\n    var otherId;\n    for (otherId in this.players) {\n      if (otherId !== playerId) {\n        changed = this.disassociatePlayerWithCard(otherId, cardId, changed);\n      }\n    }\n    return changed;\n  }\n\n  cardIsType(cardId, type) {\n    return this.cards[cardId].info.type === type;\n  }\n\n  addDiscovery(playerId, cardId, holds, reason) {\n    var cardInfo, discovery, f, fact, j, len, ref, typeinfo;\n    ref = this.facts;\n    //    console.log(\"addDiscovery: (playerId: #{playerId}, cardId: #{cardId}, holds: #{holds}, reason: #{if reason? then reason else null})\")\n    // Check if the fact is not already known\n    //    console.log(\"addDiscovery: (playerId: #{playerId}, cardId: #{cardId}, holds: #{holds}, reason: #{if reason? then reason else null})\")\n    for (j = 0, len = ref.length; j < len; j++) {\n      f = ref[j];\n      if (f.playerId === playerId && f.cardId === cardId) {\n        return;\n      }\n    }\n    fact = {playerId, cardId, holds};\n    //    console.log(\"addDiscovery: fact: #{JSON.stringify(fact)}\")\n    this.facts.push(fact);\n    //    console.log(\"addDiscovery: facts length = #{@facts.length}\")\n    if (reason != null) {\n      cardInfo = this.cards[cardId].info;\n      typeinfo = this.types[cardInfo.type];\n      discovery = playerId + (holds ? \" holds \" : \" does not hold \") + typeinfo.article + cardInfo.name + \": \" + reason;\n      return this.discoveriesLog.push(discovery);\n    }\n  }\n\n  addDiscoveries(playerId, cardIds, holds, reason = null) {\n    var c, j, len;\n    for (j = 0, len = cardIds.length; j < len; j++) {\n      c = cardIds[j];\n      this.addDiscovery(playerId, c, holds, reason);\n    }\n  }\n\n  addCardHoldersToDiscoveries() {\n    var card, cardId, holders, ref, results;\n    ref = this.cards;\n    results = [];\n    for (cardId in ref) {\n      card = ref[cardId];\n      holders = card.holders;\n      if (holders.length === 1) {\n        results.push(this.addDiscovery(holders[0], cardId, true, \"nobody else holds it\"));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  }\n\n};\n\nexport default Solver;\n","// Generated by CoffeeScript 2.3.2\n\nimport React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\n;\nvar CurrentState, HeaderRow, StateElement, StateGrid, StateRow;\n\nStateElement = function(props) {\n  var card, playerId;\n  ({card, playerId} = props);\n  if (card.isHeldBy(playerId)) {\n    return <Icon>check_box</Icon>;\n  } else if (card.mightBeHeldBy(playerId)) {\n    return <Icon>indeterminate_check_box</Icon>;\n  } else {\n    return <Icon>check_box_outline_blank</Icon>;\n  }\n};\n\nHeaderRow = function(props) {\n  var playerId, players;\n  ({players} = props);\n  return <Grid container item xs={12} justify=\"center\">\n    <Grid item xs={4}><h4>Card</h4></Grid>\n    {(function() {\n    var results;\n    results = [];\n    for (playerId in players) {\n      results.push(<Grid item key={playerId} xs={1}><h4>{playerId}</h4></Grid>);\n    }\n    return results;\n  })()}\n  </Grid>;\n};\n\nStateRow = function(props) {\n  var card, playerId, players;\n  ({card, players} = props);\n  return <Grid container item xs={12} justify=\"center\">\n    <Grid item xs={4}>\n      {card.info.name}\n    </Grid>\n    {(function() {\n    var results;\n    results = [];\n    for (playerId in players) {\n      results.push(<Grid item key={playerId} xs={1}> \n          <StateElement card={card} playerId={playerId} /> \n        </Grid>);\n    }\n    return results;\n  })()}\n  </Grid>;\n};\n\nStateGrid = function(props) {\n  var card, cards, id, players;\n  ({cards, players} = props);\n  return <Grid container>\n    <HeaderRow players={players} />\n    {(function() {\n    var results;\n    results = [];\n    for (id in cards) {\n      card = cards[id];\n      results.push(<StateRow key={id} card={card} players={players} />);\n    }\n    return results;\n  })()}\n  </Grid>;\n};\n\nCurrentState = class CurrentState extends Component {\n  render() {\n    return <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={this.props.app.showHandDialog}>Hand</Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={this.props.app.showSuggestDialog}>Suggest</Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={this.props.app.showShowDialog}>Show</Button>\n      <hr />\n      <StateGrid cards={this.props.solver.cards} players={this.props.solver.players} />\n    </div>;\n  }\n\n};\n\nexport default CurrentState;\n","// Generated by CoffeeScript 2.3.2\n\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n;\nvar TopBar;\n\n//import { withStyles } from '@material-ui/core/styles';\nTopBar = function(props) {\n  return <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton color=\"inherit\" onClick={(event) => {\n      return props.app.showMainMenu(event.currentTarget);\n    }}>\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\">\n        Not A Clue\n      </Typography>\n    </Toolbar>\n  </AppBar>;\n};\n\nexport default TopBar;\n","// Generated by CoffeeScript 2.3.2\n\nimport React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n;\nvar ConfirmDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nConfirmDialog = class ConfirmDialog extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleYes = this.handleYes.bind(this);\n    this.handleNo = this.handleNo.bind(this);\n  }\n\n  handleYes() {\n    boundMethodCheck(this, ConfirmDialog);\n    console.log(\"ConfirmDialog::handleYes\");\n    this.props.onClose();\n    if (this.props.yesAction != null) {\n      return this.props.yesAction();\n    }\n  }\n\n  handleNo() {\n    boundMethodCheck(this, ConfirmDialog);\n    console.log(\"ConfirmDialog::handleNo\");\n    this.props.onClose();\n    if (this.props.noAction != null) {\n      return this.props.noAction();\n    }\n  }\n\n  render() {\n    console.log(`ConfirmDialog::render ${this.props.open}`);\n    return <Dialog open={this.props.open} onClose={this.props.onClose}>\n      <DialogTitle id=\"form-dialog-title\">Please Confirm</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {this.props.question}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        {(this.props.noAction != null ? <Button variant=\"contained\" color=\"primary\" onClick={this.handleNo}>{(this.props.yesAction != null ? \"No\" : \"Cancel\")}</Button> : void 0)}\n        {((this.props.yesAction != null) || !this.props.noAction ? <Button variant=\"contained\" color=\"primary\" onClick={this.handleYes}>{(this.props.noAction != null ? \"Yes\" : \"Ok\")}</Button> : void 0)}\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default ConfirmDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nimport React, { Component } from 'react';\n;\nvar CardChoices, CardList, GroupedCardList, MultipleCardChooser,\n  indexOf = [].indexOf,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nGroupedCardList = function(props) {\n  var cards, id, selectedIds, typeId;\n  ({selectedIds, typeId, cards} = props);\n  return <ul>\n    {(function() {\n    var i, len, results;\n    results = [];\n    for (i = 0, len = selectedIds.length; i < len; i++) {\n      id = selectedIds[i];\n      if (cards[id].type === typeId) {\n        results.push(<li key={id}>\n          {cards[id].name}\n        </li>);\n      }\n    }\n    return results;\n  })()}\n  </ul>;\n};\n\nCardList = function(props) {\n  var cards, selectedIds, typeId, types, value;\n  ({selectedIds, cards, types} = props);\n  return <ul>\n    {(function() {\n    var results;\n    results = [];\n    for (typeId in types) {\n      value = types[typeId];\n      results.push(<li key={typeId}>\n          <b> {value.title} </b>\n          <GroupedCardList selectedIds={selectedIds} typeId={typeId} cards={cards} />\n        </li>);\n    }\n    return results;\n  })()}\n  </ul>;\n};\n\nCardChoices = function(props) {\n  var id, info;\n  return <FormGroup row>\n    {(function() {\n    var ref, results;\n    ref = props.cards;\n    results = [];\n    for (id in ref) {\n      info = ref[id];\n      if (info.type === props.type) {\n        results.push(<FormControlLabel key={id} control={<Checkbox checked={indexOf.call(props.value, id) >= 0} disabled={indexOf.call(props.excluded, id) >= 0} onChange={props.onChange(id)} value={id} />} label={info.name} />);\n      }\n    }\n    return results;\n  })()}\n  </FormGroup>;\n};\n\nMultipleCardChooser = class MultipleCardChooser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChangeTab(event, currentTab) {\n    boundMethodCheck(this, MultipleCardChooser);\n    console.log(`MultipleCardChooser::handleChangeTab: (event, ${currentTab})`);\n    return this.setState({currentTab});\n  }\n\n  handleChangeCards(cardId) {\n    boundMethodCheck(this, MultipleCardChooser);\n    return (event) => {\n      console.log(`MultipleCardChooser::handleChangeCards: (${cardId}, ${event.target.checked})`);\n      return this.props.onChange(cardId, event.target.checked);\n    };\n  }\n\n  render() {\n    var cards, excluded, id, tabId, tabIds, tabIndex, types, value;\n    ({value, cards, types, excluded} = this.props);\n    tabIds = (function() {\n      var results;\n      results = [];\n      for (id in types) {\n        results.push(id);\n      }\n      return results;\n    })();\n    tabIndex = this.state.currentTab >= 0 && this.state.currentTab < tabIds.length ? this.state.currentTab : 0;\n    tabId = tabIds[tabIndex];\n    return <div>\n      <AppBar position=\"static\">\n        <Tabs value={tabIndex} onChange={this.handleChangeTab}>\n          {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = tabIds.length; i < len; i++) {\n        id = tabIds[i];\n        results.push(<Tab key={id} label={types[id].title} />);\n      }\n      return results;\n    })()}\n        </Tabs>\n      </AppBar>\n      <CardChoices value={value} cards={cards} excluded={excluded} type={tabId} onChange={this.handleChangeCards} />\n      <h4>Selected Cards:</h4>\n      <CardList selectedIds={value} cards={cards} types={types} />\n    </div>;\n  }\n\n};\n\nexport default MultipleCardChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport React from 'react';\n;\nvar PlayerChoices, PlayerChooser;\n\nPlayerChoices = function(props) {\n  var id;\n  console.log(`PlayerChoices (render): (${props.value}, [${props.playerIds}])`);\n  return <RadioGroup row name=\"players\" value={props.value} onChange={props.onChange}>\n    {(function() {\n    var i, len, ref, results;\n    ref = props.playerIds;\n    results = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      id = ref[i];\n      results.push(<FormControlLabel key={id} value={id} control={<Radio />} label={id} />);\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nPlayerChooser = function(props) {\n  console.log(`PlayerChoooser (render): (${props.value}, [${props.playerIds}])`);\n  return <FormControl component=\"fieldset\">\n    <PlayerChoices value={props.value} playerIds={props.playerIds} onChange={function(event) {\n      return props.onChange(event.target.value);\n    }} />\n  </FormControl>;\n};\n\nexport default PlayerChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport PropTypes from 'prop-types'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\n;\nvar AddPlayerInput, ConfigurationChoices, ConfigurationChooser, PlayerList, Players, SetupDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nConfigurationChoices = function(props) {\n  var key, value;\n  return <RadioGroup row name=\"variations\" value={props.configurationId} onChange={props.onChange}>\n    {(function() {\n    var ref, results;\n    ref = props.configurations;\n    results = [];\n    for (key in ref) {\n      value = ref[key];\n      results.push(<FormControlLabel key={key} value={key} control={<Radio />} label={value.name} />);\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nConfigurationChooser = function(props) {\n  return <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\"><h4>Select a variation:</h4></FormLabel>\n      <ConfigurationChoices configurationId={props.configurationId} configurations={props.configurations} onChange={function(event) {\n      return props.onChange(event.target.value);\n    }} />\n    </FormControl>;\n};\n\nAddPlayerInput = class AddPlayerInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAddPlayer = this.handleAddPlayer.bind(this);\n    this.state = {\n      playerId: ''\n    };\n  }\n\n  handleChange(event) {\n    boundMethodCheck(this, AddPlayerInput);\n    //    console.log(\"AddPlayerInput::handleChange\")\n    return this.setState({\n      playerId: event.target.value\n    });\n  }\n\n  handleAddPlayer() {\n    var ref;\n    boundMethodCheck(this, AddPlayerInput);\n    if (this.state.playerId !== \"\" && (ref = this.state.playerId, indexOf.call(this.props.playerIds, ref) < 0)) {\n      //    console.log(\"AddPlayerInput::handleAddPlayer\")\n      this.props.onAddPlayer(this.state.playerId);\n    }\n    return this.setState({\n      playerId: ''\n    });\n  }\n\n  render() {\n    return <div>\n      <TextField autoFocus margin=\"normal\" value={this.state.playerId} onChange={this.handleChange} />\n      <Button disabled={this.props.count >= this.props.max} variant=\"contained\" color=\"primary\" onClick={this.handleAddPlayer}>\n        Add\n      </Button>\n    </div>;\n  }\n\n};\n\nAddPlayerInput.propTypes = {\n  playerIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  count: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onAddPlayer: PropTypes.func.isRequired\n};\n\nPlayerList = function(props) {\n  return <ul>\n      {props.names.map((playerId) => {\n    return <li key={playerId}>{playerId}</li>;\n  })}\n    </ul>;\n};\n\nPlayerList.defaultProps = {\n  names: []\n};\n\nPlayers = function(props) {\n  return <div>\n      <AddPlayerInput playerIds={props.playerIds} count={props.playerIds.length} max={props.max} onAddPlayer={props.onAddPlayer} />\n      <PlayerList names={props.playerIds} />\n      <Button variant=\"contained\" color=\"primary\" onClick={props.onClearPlayers}>Clear Players</Button>\n    </div>;\n};\n\nSetupDialog = class SetupDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddPlayer = this.handleAddPlayer.bind(this);\n    this.handleClearPlayers = this.handleClearPlayers.bind(this);\n    this.handleChangeConfiguration = this.handleChangeConfiguration.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      playerIds: [],\n      configurationId: this.props.configurationId\n    };\n  }\n\n  handleAddPlayer(playerId) {\n    boundMethodCheck(this, SetupDialog);\n    //    console.log(\"SetupDialog::handleAddPlayer(#{playerId})\")\n    return this.setState(function(state, props) {\n      return {\n        playerIds: state.playerIds.concat([playerId])\n      };\n    });\n  }\n\n  handleClearPlayers() {\n    boundMethodCheck(this, SetupDialog);\n    //    console.log(\"SetupDialog::handleClearPlayers\")\n    return this.setState({\n      playerIds: []\n    });\n  }\n\n  handleChangeConfiguration(configurationId) {\n    boundMethodCheck(this, SetupDialog);\n    //    console.log(\"SetupDialog::handleChangeConfiguration(#{configurationId})\")\n    return this.setState({configurationId});\n  }\n\n  handleDone() {\n    boundMethodCheck(this, SetupDialog);\n    //    console.log(\"SetupDialog::handleDone\")\n    this.props.onClose();\n    return this.props.app.newGame(this.state.configurationId, this.state.playerIds);\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, SetupDialog);\n    //    console.log(\"SetupDialog::handleCancel\")\n    return this.props.onClose();\n  }\n\n  render() {\n    var maxPlayers, minPlayers, numPlayers;\n    numPlayers = this.state.playerIds.length;\n    minPlayers = this.props.configurations[this.state.configurationId].minPlayers;\n    maxPlayers = this.props.configurations[this.state.configurationId].maxPlayers;\n    return <Dialog open={this.props.open} onClose={this.props.onClose}>\n      <DialogTitle id=\"form-dialog-title\">New Game</DialogTitle>\n      <DialogContent>\n        <ConfigurationChooser configurationId={this.state.configurationId} configurations={this.props.configurations} onChange={this.handleChangeConfiguration} />\n        <Divider />\n        <DialogContentText><h4>Add players:</h4></DialogContentText>\n        <Players playerIds={this.state.playerIds} max={maxPlayers} onAddPlayer={this.handleAddPlayer} onClearPlayers={this.handleClearPlayers} />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button disabled={numPlayers < minPlayers} variant=\"contained\" color=\"primary\" onClick={this.handleDone}>\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default SetupDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport MultipleCardChooser from './MultipleCardChooser'\nimport PlayerChooser from './PlayerChooser'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport React, { Component } from 'react';\n;\nvar HandDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nHandDialog = class HandDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangePlayer = this.handleChangePlayer.bind(this);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      playerId: null,\n      cardIds: []\n    };\n  }\n\n  handleChangePlayer(playerId) {\n    boundMethodCheck(this, HandDialog);\n    console.log(`HandDialog::handleChangePlayer: (${playerId})`);\n    return this.setState({playerId});\n  }\n\n  handleChangeCards(cardId, selected) {\n    boundMethodCheck(this, HandDialog);\n    console.log(`HandDialog::handleChangeCards: (${cardId}, ${selected})`);\n    if (selected) {\n      return this.setState(function(state, props) {\n        if (indexOf.call(state.cardIds, cardId) < 0) {\n          return {\n            cardIds: state.cardIds.concat([cardId])\n          };\n        } else {\n          return null;\n        }\n      });\n    } else {\n      return this.setState(function(state, props) {\n        var id;\n        if (indexOf.call(state.cardIds, cardId) >= 0) {\n          return {\n            cardIds: (function() {\n              var i, len, ref, results;\n              ref = state.cardIds;\n              results = [];\n              for (i = 0, len = ref.length; i < len; i++) {\n                id = ref[i];\n                if (id !== cardId) {\n                  results.push(id);\n                }\n              }\n              return results;\n            })()\n          };\n        } else {\n          return null;\n        }\n      });\n    }\n  }\n\n  handleDone() {\n    boundMethodCheck(this, HandDialog);\n    console.log(\"HandDialog::handleDone\");\n    this.props.onClose();\n    if ((this.state.playerId != null) && this.state.cardIds.length > 0) {\n      this.props.app.recordHand(this.state.playerId, this.state.cardIds);\n    } else {\n      this.props.app.showConfirmDialog(\"You must select a player and at least one card\");\n    }\n    return this.setState({\n      playerId: null,\n      cardIds: []\n    });\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, HandDialog);\n    console.log(\"HandDialog::handleCancel\");\n    this.props.onClose();\n    return this.setState({\n      playerId: null,\n      cardIds: []\n    });\n  }\n\n  render() {\n    console.log(`HandDialog::render ${this.props.open}`);\n    return <Dialog open={this.props.open} fullscreen=\"true\" onClose={this.handleCancel}>\n      <DialogTitle id=\"form-dialog-title\">Record Hand</DialogTitle>\n      <DialogContent>\n        <DialogContentText><h4>Which player?</h4></DialogContentText>\n        <PlayerChooser value={this.state.playerId} playerIds={this.props.playerIds} onChange={this.handleChangePlayer} />\n        <Divider />\n        <DialogContentText><h4>Select the cards in the player's hand:</h4></DialogContentText>\n        <MultipleCardChooser value={this.state.cardIds} cards={this.props.configuration.cards} types={this.props.configuration.types} excluded={[]} onChange={this.handleChangeCards} />\n     </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleDone}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default HandDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport React, { Component } from 'react';\n\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n;\nvar MainMenu,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nMainMenu = class MainMenu extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  handleStart() {\n    boundMethodCheck(this, MainMenu);\n    //    console.log(\"MainMenu::handleStart\")\n    this.props.onClose();\n    return this.props.app.showNewGameDialog();\n  }\n\n  handleClear() {\n    boundMethodCheck(this, MainMenu);\n    //    console.log(\"MainMenu::handleClearGame\")\n    this.props.onClose();\n    return this.props.app.showConfirmDialog(\"Are you sure you want to clear the current game?\", this.props.app.clearGame, function() {\n      return {};\n    });\n  }\n\n  render() {\n    return <Menu id=\"main-menu\" anchorEl={this.props.anchor} open={Boolean(this.props.anchor)} onClose={this.props.onClose}>\n      <MenuItem onClick={this.handleStart}>Start New Game</MenuItem>\n      <MenuItem onClick={this.handleClear}>Clear Current Game</MenuItem>\n    </Menu>;\n  }\n\n};\n\nexport default MainMenu;\n","// Generated by CoffeeScript 2.3.2\n\nimport AppBar from '@material-ui/core/AppBar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nimport React, { Component } from 'react';\n;\nvar CardChoices, CardChooser,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nCardChoices = function(props) {\n  var id, info;\n  console.log(`CardChoices (render): (${props.value}, ${props.type})`);\n  return <RadioGroup row name=\"cards\" value={props.value} onChange={props.onChange}>\n    {(function() {\n    var ref, results;\n    ref = props.cards;\n    results = [];\n    for (id in ref) {\n      info = ref[id];\n      if (info.type === props.type) {\n        results.push(<FormControlLabel key={id} value={id} control={<Radio />} label={info.name} />);\n      }\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nCardChooser = class CardChooser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChangeTab(event, currentTab) {\n    boundMethodCheck(this, CardChooser);\n    console.log(`CardChooser::handleChangeTab: (event, ${currentTab})`);\n    return this.setState({currentTab});\n  }\n\n  render() {\n    var cards, id, tabId, tabIds, tabIndex, types, value;\n    ({value, cards, types} = this.props);\n    tabIds = (function() {\n      var results;\n      results = [];\n      for (id in types) {\n        results.push(id);\n      }\n      return results;\n    })();\n    tabIndex = this.state.currentTab >= 0 && this.state.currentTab < tabIds.length ? this.state.currentTab : 0;\n    tabId = tabIds[tabIndex];\n    return <div>\n      <AppBar position=\"static\">\n        <Tabs value={tabIndex} onChange={this.handleChangeTab}>\n          {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = tabIds.length; i < len; i++) {\n        id = tabIds[i];\n        results.push(<Tab key={id} label={types[id].title} />);\n      }\n      return results;\n    })()}\n        </Tabs>\n      </AppBar>\n      <FormControl component=\"fieldset\">\n        <CardChoices value={value} type={tabId} cards={cards} onChange={(event) => {\n        return this.props.onChange(event.target.value);\n      }} />\n      </FormControl>\n    </div>;\n  }\n\n};\n\nexport default CardChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport AppBar from '@material-ui/core/AppBar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nimport React, { Component } from 'react';\n;\nvar CardChoices, CardList, PerCategoryCardChooser,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nCardList = function(props) {\n  var cards, selectedIds, typeId, types, value;\n  ({selectedIds, cards, types} = props);\n  return <ul>\n    {(function() {\n    var results;\n    results = [];\n    for (typeId in types) {\n      value = types[typeId];\n      results.push(<li key={typeId}>\n          <b> {value.title}: </b> {(selectedIds[typeId] != null ? cards[selectedIds[typeId]].name : void 0)}\n        </li>);\n    }\n    return results;\n  })()}\n  </ul>;\n};\n\nCardChoices = function(props) {\n  var id, info;\n  console.log(`CardChoices (render): (${props.value}, [${props.typeId}])`);\n  return <RadioGroup row name=\"cards\" value={props.value} onChange={props.onChange}>\n    {(function() {\n    var ref, results;\n    ref = props.cards;\n    results = [];\n    for (id in ref) {\n      info = ref[id];\n      if (info.type === props.typeId) {\n        results.push(<FormControlLabel key={id} value={id} control={<Radio />} label={info.name} />);\n      }\n    }\n    return results;\n  })()}\n  </RadioGroup>;\n};\n\nPerCategoryCardChooser = class PerCategoryCardChooser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChangeTab(event, currentTab) {\n    boundMethodCheck(this, PerCategoryCardChooser);\n    console.log(`CardChooser::handleChangeTab: (event, ${currentTab})`);\n    return this.setState({currentTab});\n  }\n\n  handleChangeCards(typeId) {\n    boundMethodCheck(this, PerCategoryCardChooser);\n    return (event) => {\n      console.log(`CardChooser::handleChangeCards: (${typeId}, ${event.target.value})`);\n      return this.props.onChange(typeId, event.target.value);\n    };\n  }\n\n  render() {\n    var cards, id, tabId, tabIds, tabIndex, types, value;\n    ({value, cards, types} = this.props);\n    tabIds = (function() {\n      var results;\n      results = [];\n      for (id in types) {\n        results.push(id);\n      }\n      return results;\n    })();\n    tabIndex = this.state.currentTab >= 0 && this.state.currentTab < tabIds.length ? this.state.currentTab : 0;\n    tabId = tabIds[tabIndex];\n    return <div>\n      <AppBar position=\"static\">\n        <Tabs value={tabIndex} onChange={this.handleChangeTab}>\n          {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = tabIds.length; i < len; i++) {\n        id = tabIds[i];\n        results.push(<Tab key={id} label={types[id].title} />);\n      }\n      return results;\n    })()}\n        </Tabs>\n      </AppBar>\n      <CardChoices value={value[tabId]} cards={cards} typeId={tabId} onChange={this.handleChangeCards(tabId)} />\n      <h4>Selected Cards:</h4>\n      <CardList selectedIds={value} cards={cards} types={types} />\n    </div>;\n  }\n\n};\n\nexport default PerCategoryCardChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport PlayerChooser from './PlayerChooser'\nimport CardChooser from './CardChooser'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\n\nimport React, { Component } from 'react';\n;\nvar ShowDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nShowDialog = class ShowDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangePlayer = this.handleChangePlayer.bind(this);\n    this.handleChangeCard = this.handleChangeCard.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      playerId: null,\n      cardId: null\n    };\n  }\n\n  handleChangePlayer(playerId) {\n    boundMethodCheck(this, ShowDialog);\n    console.log(`ShowDialog::handleChangePlayer: (${playerId})`);\n    return this.setState({playerId});\n  }\n\n  handleChangeCard(cardId) {\n    boundMethodCheck(this, ShowDialog);\n    console.log(`ShowDialog::handleChangeCard: (${cardId})`);\n    return this.setState({cardId});\n  }\n\n  handleDone() {\n    boundMethodCheck(this, ShowDialog);\n    console.log(\"ShowDialog::handleDone\");\n    this.props.onClose();\n    if ((this.state.playerId != null) && (this.state.cardId != null)) {\n      this.props.app.recordShown(this.state.playerId, this.state.cardId);\n    } else {\n      this.props.app.showConfirmDialog(\"You must select a player and a card\");\n    }\n    return this.setState({\n      playerId: null,\n      cardId: null\n    });\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, ShowDialog);\n    console.log(\"ShowDialog::handleCancel\");\n    this.props.onClose();\n    return this.setState({\n      playerId: null,\n      cardId: null\n    });\n  }\n\n  render() {\n    return <Dialog open={this.props.open} onClose={this.props.onClose}>\n      <DialogTitle id=\"form-dialog-title\">Record A Shown Card</DialogTitle>\n      <DialogContent>\n        <DialogContentText><h4>Who showed the card?</h4></DialogContentText>\n        <PlayerChooser value={this.state.playerId} playerIds={this.props.playerIds} onChange={this.handleChangePlayer} />\n        <Divider />\n        <DialogContentText><h4>What card did they show?</h4></DialogContentText>\n        <CardChooser value={this.state.cardId} cards={this.props.configuration.cards} types={this.props.configuration.types} onChange={this.handleChangeCard} />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleDone}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default ShowDialog;\n","// Generated by CoffeeScript 2.3.2\n\nimport Solver from './Solver'\nimport TopBar from './TopBar'\n\nimport ConfirmDialog from './ConfirmDialog'\nimport CurrentState from './CurrentState'\nimport HandDialog from './HandDialog'\nimport MainMenu from './MainMenu'\nimport React, { Component } from 'react';\nimport SetupDialog from './SetupDialog'\nimport ShowDialog from './ShowDialog'\nimport SuggestDialog from './SuggestDialog'\n;\nvar App, classic, configurations, haunted_mansion, master_detective,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\nclassic = {\n  name: \"Classic\",\n  rulesId: \"classic\",\n  minPlayers: 3,\n  maxPlayers: 6,\n  types: {\n    suspect: {\n      title: \"Suspects\",\n      preposition: \"\",\n      article: \"\"\n    },\n    weapon: {\n      title: \"Weapons\",\n      preposition: \"with \",\n      article: \"the \"\n    },\n    room: {\n      title: \"Rooms\",\n      preposition: \"in \",\n      article: \"the \"\n    }\n  },\n  cards: {\n    mustard: {\n      name: \"Colonel Mustard\",\n      type: \"suspect\"\n    },\n    white: {\n      name: \"Mrs. White\",\n      type: \"suspect\"\n    },\n    plum: {\n      name: \"Professor Plum\",\n      type: \"suspect\"\n    },\n    peacock: {\n      name: \"Mrs. Peacock\",\n      type: \"suspect\"\n    },\n    green: {\n      name: \"Mr. Green\",\n      type: \"suspect\"\n    },\n    scarlet: {\n      name: \"Miss Scarlet\",\n      type: \"suspect\"\n    },\n    revolver: {\n      name: \"Revolver\",\n      type: \"weapon\"\n    },\n    knife: {\n      name: \"Knife\",\n      type: \"weapon\"\n    },\n    rope: {\n      name: \"Rope\",\n      type: \"weapon\"\n    },\n    pipe: {\n      name: \"Lead pipe\",\n      type: \"weapon\"\n    },\n    wrench: {\n      name: \"Wrench\",\n      type: \"weapon\"\n    },\n    candlestick: {\n      name: \"Candlestick\",\n      type: \"weapon\"\n    },\n    dining: {\n      name: \"Dining Room\",\n      type: \"room\"\n    },\n    conservatory: {\n      name: \"Conservatory\",\n      type: \"room\"\n    },\n    kitchen: {\n      name: \"Kitchen\",\n      type: \"room\"\n    },\n    study: {\n      name: \"Study\",\n      type: \"room\"\n    },\n    library: {\n      name: \"Library\",\n      type: \"room\"\n    },\n    billiard: {\n      name: \"Billiards Room\",\n      type: \"room\"\n    },\n    lounge: {\n      name: \"Lounge\",\n      type: \"room\"\n    },\n    ballroom: {\n      name: \"Ballroom\",\n      type: \"room\"\n    },\n    hall: {\n      name: \"Hall\",\n      type: \"room\"\n    }\n  },\n  suggestion: [\"suspect\", \"weapon\", \"room\"]\n};\n\nmaster_detective = {\n  name: \"Master Detective\",\n  rulesId: \"master\",\n  minPlayers: 3,\n  maxPlayers: 10,\n  types: {\n    suspect: {\n      title: \"Suspects\",\n      preposition: \"\",\n      article: \"\"\n    },\n    weapon: {\n      title: \"Weapons\",\n      preposition: \"with \",\n      article: \"the \"\n    },\n    room: {\n      title: \"Rooms\",\n      preposition: \"in \",\n      article: \"the \"\n    }\n  },\n  cards: {\n    mustard: {\n      name: \"Colonel Mustard\",\n      type: \"suspect\"\n    },\n    white: {\n      name: \"Mrs. White\",\n      type: \"suspect\"\n    },\n    plum: {\n      name: \"Professor Plum\",\n      type: \"suspect\"\n    },\n    peacock: {\n      name: \"Mrs. Peacock\",\n      type: \"suspect\"\n    },\n    green: {\n      name: \"Mr. Green\",\n      type: \"suspect\"\n    },\n    scarlet: {\n      name: \"Miss Scarlet\",\n      type: \"suspect\"\n    },\n    rose: {\n      name: \"Madame Rose\",\n      type: \"suspect\"\n    },\n    gray: {\n      name: \"Sergeant Gray\",\n      type: \"suspect\"\n    },\n    brunette: {\n      name: \"Monsieur Brunette\",\n      type: \"suspect\"\n    },\n    peach: {\n      name: \"Miss Peach\",\n      type: \"suspect\"\n    },\n    revolver: {\n      name: \"Revolver\",\n      type: \"weapon\"\n    },\n    knife: {\n      name: \"Knife\",\n      type: \"weapon\"\n    },\n    rope: {\n      name: \"Rope\",\n      type: \"weapon\"\n    },\n    pipe: {\n      name: \"Pipe\",\n      type: \"weapon\"\n    },\n    wrench: {\n      name: \"Wrench\",\n      type: \"weapon\"\n    },\n    candlestick: {\n      name: \"Candlestick\",\n      type: \"weapon\"\n    },\n    poison: {\n      name: \"Poison\",\n      type: \"weapon\"\n    },\n    horseshoe: {\n      name: \"Horseshoe\",\n      type: \"weapon\"\n    },\n    dining: {\n      name: \"Dining Room\",\n      type: \"room\"\n    },\n    conservatory: {\n      name: \"Conservatory\",\n      type: \"room\"\n    },\n    kitchen: {\n      name: \"Kitchen\",\n      type: \"room\"\n    },\n    studio: {\n      name: \"Studio\",\n      type: \"room\"\n    },\n    library: {\n      name: \"Library\",\n      type: \"room\"\n    },\n    billiard: {\n      name: \"Billiard Room\",\n      type: \"room\"\n    },\n    courtyard: {\n      name: \"Courtyard\",\n      type: \"room\"\n    },\n    gazebo: {\n      name: \"Gazebo\",\n      type: \"room\"\n    },\n    drawing: {\n      name: \"Drawing Room\",\n      type: \"room\"\n    },\n    carriage: {\n      name: \"Carriage House\",\n      type: \"room\"\n    },\n    trophy: {\n      name: \"Trophy Room\",\n      type: \"room\"\n    },\n    fountain: {\n      name: \"Fountain\",\n      type: \"room\"\n    }\n  },\n  suggestion: [\"suspect\", \"weapon\", \"room\"]\n};\n\nhaunted_mansion = {\n  name: \"Haunted Mansion\",\n  rulesId: \"classic\",\n  minPlayers: 3,\n  maxPlayers: 6,\n  types: {\n    guest: {\n      title: \"Guests\",\n      preposition: \"haunted \",\n      article: \"\"\n    },\n    ghost: {\n      title: \"Ghosts\",\n      preposition: \"\",\n      article: \"the \"\n    },\n    room: {\n      title: \"Rooms\",\n      preposition: \"in \",\n      article: \"the \"\n    }\n  },\n  cards: {\n    pluto: {\n      name: \"Pluto\",\n      type: \"guest\"\n    },\n    daisy: {\n      name: \"Daisy Duck\",\n      type: \"guest\"\n    },\n    goofy: {\n      name: \"Goofy\",\n      type: \"guest\"\n    },\n    donald: {\n      name: \"Donald Duck\",\n      type: \"guest\"\n    },\n    minnie: {\n      name: \"Minnie Mouse\",\n      type: \"guest\"\n    },\n    mickey: {\n      name: \"Mickey Mouse\",\n      type: \"guest\"\n    },\n    prisoner: {\n      name: \"Prisoner\",\n      type: \"ghost\"\n    },\n    singer: {\n      name: \"Opera Singer\",\n      type: \"ghost\"\n    },\n    bride: {\n      name: \"Bride\",\n      type: \"ghost\"\n    },\n    traveler: {\n      name: \"Traveler\",\n      type: \"ghost\"\n    },\n    mariner: {\n      name: \"Mariner\",\n      type: \"ghost\"\n    },\n    skeleton: {\n      name: \"Candlestick\",\n      type: \"ghost\"\n    },\n    graveyard: {\n      name: \"Graveyard\",\n      type: \"room\"\n    },\n    seance: {\n      name: \"Seance Room\",\n      type: \"room\"\n    },\n    ballroom: {\n      name: \"Ballroom\",\n      type: \"room\"\n    },\n    attic: {\n      name: \"Attic\",\n      type: \"room\"\n    },\n    mausoleum: {\n      name: \"Mausoleum\",\n      type: \"room\"\n    },\n    conservatory: {\n      name: \"Conservatory\",\n      type: \"room\"\n    },\n    library: {\n      name: \"Library\",\n      type: \"room\"\n    },\n    foyer: {\n      name: \"Foyer\",\n      type: \"room\"\n    },\n    chamber: {\n      name: \"Portrait Chamber\",\n      type: \"room\"\n    }\n  },\n  suggestion: [\"ghost\", \"guest\", \"room\"]\n};\n\nconfigurations = {\n  classic: classic,\n  master_detective: master_detective,\n  haunted_mansion: haunted_mansion\n};\n\nApp = class App extends Component {\n  constructor(props) {\n    super(props);\n    this.newGame = this.newGame.bind(this);\n    this.clearGame = this.clearGame.bind(this);\n    this.recordHand = this.recordHand.bind(this);\n    this.recordSuggestion = this.recordSuggestion.bind(this);\n    this.recordShown = this.recordShown.bind(this);\n    this.showHandDialog = this.showHandDialog.bind(this);\n    this.showSuggestDialog = this.showSuggestDialog.bind(this);\n    this.showShowDialog = this.showShowDialog.bind(this);\n    this.handleShowDialogClose = this.handleShowDialogClose.bind(this);\n    this.showNewGameDialog = this.showNewGameDialog.bind(this);\n    this.handleNewGameDialogClose = this.handleNewGameDialogClose.bind(this);\n    this.showConfirmDialog = this.showConfirmDialog.bind(this);\n    this.handleConfirmDialogClose = this.handleConfirmDialogClose.bind(this);\n    this.state = {\n      playerIds: [],\n      configurationId: \"master_detective\",\n      solver: null,\n      progress: 0,\n      mainMenuAnchor: null,\n      handDialogOpen: false,\n      suggestDialogOpen: false,\n      showDialogOpen: false,\n      newGameDialogOpen: false,\n      confirmDialog: {\n        open: false,\n        question: '',\n        yesAction: null,\n        noAction: null\n      }\n    };\n  }\n\n  newGame(configurationId, playerIds) {\n    boundMethodCheck(this, App);\n    console.log(`App::newGame(${configurationId}, ${playerIds})`);\n    return this.setState({\n      playerIds: playerIds,\n      configurationId: configurationId,\n      solver: new Solver(configurations[configurationId], playerIds),\n      progress: 0\n    });\n  }\n\n  clearGame() {\n    boundMethodCheck(this, App);\n    console.log(\"App::clearGame\");\n    return this.setState({\n      solver: null,\n      progress: 0\n    });\n  }\n\n  recordHand(playerId, cardsIds) {\n    boundMethodCheck(this, App);\n    console.log(`App::recordHand(${playerId}, [${cardsIds}])`);\n    if (this.state.solver != null) {\n      this.state.solver.hand(playerId, cardsIds);\n      return this.setState(function(state, props) {\n        return {\n          progress: state.progress + 1\n        };\n      });\n    }\n  }\n\n  recordSuggestion(suggesterId, cardIds, showedIds) {\n    boundMethodCheck(this, App);\n    console.log(`App::recordSuggestion(${suggesterId}, [${cardIds}], [${showedIds}], ${this.state.progress})`);\n    if (this.state.solver != null) {\n      this.state.solver.suggest(suggesterId, cardIds, showedIds, this.state.progress);\n      return this.setState(function(state, props) {\n        return {\n          progress: state.progress + 1\n        };\n      });\n    }\n  }\n\n  recordShown(playerId, cardId) {\n    boundMethodCheck(this, App);\n    console.log(`App::recordShown(${playerId}, ${cardId})`);\n    if (this.state.solver != null) {\n      this.state.solver.show(playerId, cardId);\n      return this.setState(function(state, props) {\n        return {\n          progress: state.progress + 1\n        };\n      });\n    }\n  }\n\n  showMainMenu(anchor) {\n    return this.setState({\n      mainMenuAnchor: anchor\n    });\n  }\n\n  showHandDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      handDialogOpen: true\n    });\n  }\n\n  showSuggestDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      suggestDialogOpen: true\n    });\n  }\n\n  showShowDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      showDialogOpen: true\n    });\n  }\n\n  handleShowDialogClose() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      showDialogOpen: false\n    });\n  }\n\n  showNewGameDialog() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      newGameDialogOpen: true\n    });\n  }\n\n  handleNewGameDialogClose() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      newGameDialogOpen: false\n    });\n  }\n\n  showConfirmDialog(question, yesAction, noAction) {\n    boundMethodCheck(this, App);\n    return this.setState({\n      confirmDialog: {\n        open: true,\n        question,\n        yesAction,\n        noAction\n      }\n    });\n  }\n\n  handleConfirmDialogClose() {\n    boundMethodCheck(this, App);\n    return this.setState({\n      confirmDialog: {\n        open: false,\n        question: '',\n        yesAction: null,\n        noAction: null\n      }\n    });\n  }\n\n  render() {\n    return <div className=\"App\">\n      <TopBar app={this} />\n      {(this.state.solver != null ? <CurrentState solver={this.state.solver} app={this} /> : void 0)}\n      <MainMenu anchor={this.state.mainMenuAnchor} onClose={() => {\n        return this.setState({\n          mainMenuAnchor: null\n        });\n      }} app={this} />\n      <SetupDialog open={this.state.newGameDialogOpen} configurations={configurations} playerIds={this.state.playerIds} configurationId={this.state.configurationId} onClose={this.handleNewGameDialogClose} app={this} />\n      <HandDialog open={this.state.handDialogOpen} configuration={configurations[this.state.configurationId]} playerIds={this.state.playerIds} onClose={() => {\n        return this.setState({\n          handDialogOpen: false\n        });\n      }} app={this} />\n      <SuggestDialog open={this.state.suggestDialogOpen} configuration={configurations[this.state.configurationId]} playerIds={this.state.playerIds} onClose={() => {\n        return this.setState({\n          suggestDialogOpen: false\n        });\n      }} app={this} />\n      <ShowDialog open={this.state.showDialogOpen} configuration={configurations[this.state.configurationId]} playerIds={this.state.playerIds} onClose={() => {\n        return this.setState({\n          showDialogOpen: false\n        });\n      }} app={this} />\n      <ConfirmDialog open={this.state.confirmDialog.open} question={this.state.confirmDialog.question} yesAction={this.state.confirmDialog.yesAction} noAction={this.state.confirmDialog.noAction} onClose={() => {\n        return this.setState({\n          confirmDialog: {\n            open: false,\n            question: '',\n            yesAction: null,\n            noAction: null\n          }\n        });\n      }} app={this} />\n    </div>;\n  }\n\n};\n\nexport default App;\n","// Generated by CoffeeScript 2.3.2\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport React, {Component} from 'react';\n;\nvar MultiplePlayerChooser,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nMultiplePlayerChooser = class MultiplePlayerChooser extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n  }\n\n  handleChangeCards(playerId) {\n    boundMethodCheck(this, MultiplePlayerChooser);\n    return (event) => {\n      console.log(`MultiplePlayerChooser::handleChangePlayers: (${playerId}, ${event.target.checked})`);\n      return this.props.onChange(playerId, event.target.checked);\n    };\n  }\n\n  render() {\n    var excluded, id, playerIds, value;\n    ({value, playerIds, excluded} = this.props);\n    return <FormGroup row>\n      {(function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = playerIds.length; i < len; i++) {\n        id = playerIds[i];\n        results.push(<FormControlLabel key={id} value={id} control={<Checkbox checked={indexOf.call(value, id) >= 0} disabled={indexOf.call(excluded, id) >= 0} onChange={this.handleChangeCards(id)} value={id} />} label={id} />);\n      }\n      return results;\n    }).call(this)}\n    </FormGroup>;\n  }\n\n};\n\nexport default MultiplePlayerChooser;\n","// Generated by CoffeeScript 2.3.2\n\nimport PerCategoryCardChooser from './PerCategoryCardChooser'\nimport MultiplePlayerChooser from './MultiplePlayerChooser'\nimport PlayerChooser from './PlayerChooser'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport React, { Component } from 'react';\n;\nvar SuggestDialog,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n  indexOf = [].indexOf;\n\nSuggestDialog = class SuggestDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeSuggesterId = this.handleChangeSuggesterId.bind(this);\n    this.handleChangeCards = this.handleChangeCards.bind(this);\n    this.handleChangeShowedIds = this.handleChangeShowedIds.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.state = {\n      suggesterId: null,\n      cardIds: {},\n      showedIds: []\n    };\n  }\n\n  handleChangeSuggesterId(playerId) {\n    boundMethodCheck(this, SuggestDialog);\n    console.log(`HandDialog::handleChangeSuggesterId: (${playerId})`);\n    return this.setState({\n      suggesterId: playerId\n    });\n  }\n\n  handleChangeCards(typeId, cardId) {\n    boundMethodCheck(this, SuggestDialog);\n    return this.setState(function(state, props) {\n      var newCardIds;\n      newCardIds = Object.assign({}, state.cardIds);\n      newCardIds[typeId] = cardId;\n      return {\n        cardIds: newCardIds\n      };\n    });\n  }\n\n  handleChangeShowedIds(playerId, selected) {\n    boundMethodCheck(this, SuggestDialog);\n    console.log(`HandDialog::handleChangeCards: (${playerId}, ${selected})`);\n    if (selected) {\n      return this.setState(function(state, props) {\n        if (indexOf.call(state.showedIds, playerId) < 0) {\n          return {\n            showedIds: state.showedIds.concat([playerId])\n          };\n        } else {\n          return null;\n        }\n      });\n    } else {\n      return this.setState(function(state, props) {\n        var id;\n        if (indexOf.call(state.showedIds, playerId) >= 0) {\n          return {\n            showedIds: (function() {\n              var i, len, ref, results;\n              ref = state.showedIds;\n              results = [];\n              for (i = 0, len = ref.length; i < len; i++) {\n                id = ref[i];\n                if (id !== playerId) {\n                  results.push(id);\n                }\n              }\n              return results;\n            })()\n          };\n        } else {\n          return null;\n        }\n      });\n    }\n  }\n\n  handleDone() {\n    var cardId, cardIds, typeId;\n    boundMethodCheck(this, SuggestDialog);\n    console.log(\"SuggestDialog::handleDone\");\n    cardIds = (function() {\n      var ref, results;\n      ref = this.state.cardIds;\n      results = [];\n      for (typeId in ref) {\n        cardId = ref[typeId];\n        results.push(cardId);\n      }\n      return results;\n    }).call(this);\n    if ((this.state.suggesterId != null) && cardIds.length === 3 && this.state.showedIds.length <= 3) {\n      if (this.state.showedIds.length > 0) {\n        this.props.app.recordSuggestion(this.state.suggesterId, cardIds, this.state.showedIds);\n        this.setState({\n          suggesterId: null,\n          cardIds: {},\n          showedIds: []\n        });\n        return this.props.onClose();\n      } else {\n        return this.props.app.showConfirmDialog(\"Are you sure that nobody showed any cards?\", () => {\n          this.props.app.recordSuggestion(this.state.suggesterId, cardIds, this.state.showedIds);\n          this.setState({\n            suggesterId: null,\n            cardIds: {},\n            showedIds: []\n          });\n          return this.props.onClose();\n        }, function() {\n          return {};\n        });\n      }\n    } else {\n      return this.props.app.showConfirmDialog(\"You must select a suggester, 3 cards, and up to 3 players who showed cards.\");\n    }\n  }\n\n  handleCancel() {\n    boundMethodCheck(this, SuggestDialog);\n    console.log(\"SuggestDialog::handleCancel\");\n    this.setState({\n      suggesterId: null,\n      cardIds: {},\n      showedIds: []\n    });\n    return this.props.onClose();\n  }\n\n  render() {\n    return <Dialog open={this.props.open} onClose={this.props.onClose}>\n      <DialogTitle id=\"form-dialog-title\">Record A Suggestion</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <h4>Who made the suggestion?</h4>\n        </DialogContentText>\n        <PlayerChooser value={this.state.suggesterId} playerIds={this.props.playerIds} onChange={this.handleChangeSuggesterId} />\n        <Divider />\n        <DialogContentText>\n          <h4>What cards were suggested?</h4>\n        </DialogContentText>\n        <PerCategoryCardChooser value={this.state.cardIds} cards={this.props.configuration.cards} types={this.props.configuration.types} onChange={this.handleChangeCards} />\n        <Divider />\n        <DialogContentText>\n          <h4>Who showed cards?</h4>\n        </DialogContentText>\n        <MultiplePlayerChooser value={this.state.showedIds} playerIds={this.props.playerIds} excluded={this.state.suggesterId !== null ? [this.state.suggesterId] : []} onChange={this.handleChangeShowedIds} />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleDone}>Done</Button>\n      </DialogActions>\n    </Dialog>;\n  }\n\n};\n\nexport default SuggestDialog;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Generated by CoffeeScript 2.3.2\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n;\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}